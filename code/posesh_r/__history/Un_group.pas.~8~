unit Un_group;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ComCtrls, Grids, DBGrids, ExtCtrls,adodb,db, DBCtrls;

type
  TFrm_group = class(TForm)
    TeacherPC: TPageControl;
    selTab: TTabSheet;
    insTab: TTabSheet;
    UpdTab: TTabSheet;
    DelTab: TTabSheet;
    teacherr_inp_Box: TGroupBox;
    teacherr_data_Box: TGroupBox;
    teacherr_groupr_Box: TGroupBox;
    teacherr_btn_Box: TGroupBox;
    teacher_sel_btn: TButton;
    teacher_sel_grd: TDBGrid;
    teacher_cond_edit: TLabeledEdit;
    teacher_fnd_edit: TLabeledEdit;
    teacher_fio_radio: TRadioButton;
    teacher_pred_radio: TRadioButton;
    teacher_reset_radio: TRadioButton;
    Teacher_data_Box: TGroupBox;
    Teacher_inp_Box: TGroupBox;
    Teacher_btn_Box: TGroupBox;
    Teacher_ins_btn: TButton;
    ins_Teacher_grid: TDBGrid;
    Teacher_predm_inp: TLabeledEdit;
    Teacher_fio_inp: TLabeledEdit;
    upd_data_Box: TGroupBox;
    upd_btn_Box: TGroupBox;
    upd_inp_Box: TGroupBox;
    upd_pred_inp: TLabeledEdit;
    predm_lbl: TStaticText;
    upd_teacher_departmetr_DBL: TDBLookupComboBox;
    upd_btn: TButton;
    Predm_upd_Grid: TDBGrid;
    del_inp_Box: TGroupBox;
    del_btn_Box: TGroupBox;
    del_data_Box: TGroupBox;
    del_btn: TButton;
    del_teacher_Grid: TDBGrid;
    del_teacher_departmetr_DBL: TDBLookupComboBox;
    del_teacher_departmetr_lBL: TStaticText;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormActivate(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure del_btnClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_group: TFrm_group;

implementation

uses Un_dm, Un_func;

{$R *.dfm}

procedure TFrm_group.del_btnClick(Sender: TObject);
var
  AreFieldsEmpty: Boolean;
begin
  AreFieldsEmpty:=(
  (del_teacher_departmetr_DBL.Text='')
  );
  if AreFieldsEmpty then
  begin
    MessageDlg('Ошибка: одно из полей пустое или текст не прошел проверку.',
    mtError, [mbOK], 0);
    Beep;
    Exit;
  end;
  try
      with dm.del_teacher do
      begin
        if not dm.Connection.Connected then
          raise EDatabaseError.Create('Соединение с базой не установлено',4001);
           Parameters.ParamByName('@id_teacher').Value :=
           dm.TeacherQuery.FieldByName('id_teacher').AsString;
           ExecProc;
           dm.TeacherQuery.Close;
           dm.TeacherQuery.Open;
        MessageDlg('Изменения внесены', mtInformation, [mbOK], 0);
      end;
    except
      on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка COM: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E); // Логирование ошибки
    raise;
end;
end;
end;

procedure TFrm_group.FormActivate(Sender: TObject);
begin
  dm.teacherQuery.Open;
  AdjustDBGridColumnWidths('Frm_teacher',6000, 10);
end;

procedure TFrm_group.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  SaveFormState(Self);
  CloseAllQueriesOnDataModule('dm');
end;

procedure TFrm_group.FormCreate(Sender: TObject);
begin
  UpdateFormShowHint('Frm_teacher');
  UniformizeButtonsSize(Self,  273, 25);
  UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
  UniformizeComponentAnchors(Self);
  LoadFormState(Self);
end;

end.
