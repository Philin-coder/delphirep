unit Un_ank;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, DBCtrls, StdCtrls, Grids, DBGrids, ExtCtrls, ComCtrls;

type
  TFrm_ank = class(TForm)
    AnkPage: TPageControl;
    SelAnkPage: TTabSheet;
    ConditionAnkBox: TGroupBox;
    seldogPanel: TPanel;
    Radio_staj_name: TRadioButton;
    Radio_kval_grupp: TRadioButton;
    RadioankselReset: TRadioButton;
    condankPanel: TPanel;
    CondankEdit: TLabeledEdit;
    fndankPanel: TPanel;
    fnd_kval_Edit: TLabeledEdit;
    Check_wish_search: TCheckBox;
    DataankBox: TGroupBox;
    DataankGrd: TDBGrid;
    ButtondogBox: TGroupBox;
    SeanklBtn: TButton;
    InsPage: TTabSheet;
    InpdogBox: TGroupBox;
    cond_pay_inp: TLabeledEdit;
    Cont_face_inp: TLabeledEdit;
    DataOutdogBox: TGroupBox;
    BtnBox: TGroupBox;
    ins_Btn: TButton;
    UpddogPage: TTabSheet;
    oldDtaBox: TGroupBox;
    profnameLbl: TLabel;
    DBLookupComboBox_dog: TDBLookupComboBox;
    setdataBox: TGroupBox;
    seCfaceEdit: TLabeledEdit;
    UpddataBox: TGroupBox;
    delPage: TTabSheet;
    del_seldataBox: TGroupBox;
    profLbl: TLabel;
    delseldatadgComboBox: TDBLookupComboBox;
    dlbtnBox: TGroupBox;
    dlBtn: TButton;
    dldaraBox: TGroupBox;
    dogoutGrid: TDBGrid;
    compamy_inp: TLabeledEdit;
    c_adrees_inp: TLabeledEdit;
    c_contdata_inp: TLabeledEdit;
    dog_term_1bl: TLabel;
    dog_term_inp: TDateTimePicker;
    Grid_dog_out: TDBGrid;
    UpdBtn: TButton;
    UpddatadogBox: TGroupBox;
    set_contdata_inp: TLabeledEdit;
    Upd_contdataBtn: TButton;
    del_outGrid: TDBGrid;
    procedure FormCreate(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure SeanklBtnClick(Sender: TObject);
    procedure Radio_staj_nameClick(Sender: TObject);
    procedure Radio_kval_gruppClick(Sender: TObject);
    procedure RadioankselResetClick(Sender: TObject);
    procedure Check_wish_searchClick(Sender: TObject);
    procedure CondankEditKeyPress(Sender: TObject; var Key: Char);
    procedure fnd_kval_EditKeyPress(Sender: TObject; var Key: Char);
    procedure ins_BtnClick(Sender: TObject);
    procedure Upd_contdataBtnClick(Sender: TObject);
    procedure UpdBtnClick(Sender: TObject);
    procedure dlBtnClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_ank: TFrm_ank;
  var d_flag:Integer;
implementation

uses Un_dm, Unmain, DB;

{$R *.dfm}

procedure TFrm_ank.Check_wish_searchClick(Sender: TObject);
begin
if Check_wish_search.Checked then
begin
   CondankEdit.EditLabel.Caption:='Живой поиск по условиям(желаемым)';
end
else
begin
 CondankEdit.EditLabel.Caption:='Точное совпадение (по ФИО в анкете)';
 try
  with dm.ankQuery do
    begin
    close;
    SQL.Text:='SELECT questionnaire.ank_nom, questionnaire.b_data,'+
    'questionnaire.fio, questionnaire.kval, questionnaire.staj,'+
    'questionnaire.kval, questionnaire.wish_cond, prof.prof_name'+
    ' FROM questionnaire'+
    'inner join prof on questionnaire.id_prof= prof.id_prof WHERE (((1)=1)';
    open;
    end;
except
begin
    ShowMessage('Wrong situation');
end;
end;


end;

end;

procedure TFrm_ank.CondankEditKeyPress(Sender: TObject; var Key: Char);
begin
if Check_wish_search.Checked=true then
  begin
  dm.ankQuery.sql.Text:='SELECT questionnaire.ank_nom, questionnaire.b_data,' +
  'questionnaire.fio, questionnaire.kval, questionnaire.staj,'+
  'questionnaire.kval, questionnaire.wish_cond, prof.prof_name'+
'FROM questionnaire INNER JOIN prof ON questionnaire.id_prof= prof.id_prof'+
  'where wish_cond  like'+
   QuotedStr(Concat(CondankEdit.Text,#37));
   dm.ankQuery.Close;
   dm.ankQuery.Open;
    end
    else
          with dm.ankQuery do
     begin
     Close;
     sql.Clear;
     SQL.Text:='SELECT questionnaire.ank_nom, questionnaire.b_data,'+
'questionnaire.fio, questionnaire.kval, questionnaire.staj,'+
'questionnaire.kval, questionnaire.wish_cond, prof.prof_name'+' '+
  'FROM questionnaire' +' '+
    'inner join prof on questionnaire.id_prof=prof.id_prof';
     Open;
     end;

end;

procedure TFrm_ank.dlBtnClick(Sender: TObject);
begin


//        dm.doQuery.Close;
//        dm.doQuery.SQL.Clear;
//        dm.doQuery.SQL.Text:='delete from dogovor  where dogovor.id_dog='
//         +dm.dogQuery.FieldByName('id_dog').AsString;
//         dm.doQuery.ExecSQL;
//         dm.doQuery.SQL.Text:='select * from  dogovor';
//         dm.doQuery.Open;
//         dm.doQuery.Close;
//         dm.doQuery.Open;
//         dm.doQuery.Close;
//         dm.doQuery.Open;

end;

procedure TFrm_ank.fnd_kval_EditKeyPress(Sender: TObject; var Key: Char);
begin
try
   Check_wish_search.Enabled:=false;
   dm.ankQuery.SQL.Text:='SELECT questionnaire.ank_nom, questionnaire.b_data,'+
'questionnaire.fio, questionnaire.kval, questionnaire.staj,'+
'questionnaire.kval, questionnaire.wish_cond, prof.prof_name'+' '+
  'FROM questionnaire' +' '+
  ' inner join prof on questionnaire.id_prof=prof.id_prof where kval like'+
   QuotedStr(Concat(fnd_kval_Edit.Text,#37));
   dm.ankQuery.close;
   dm.ankQuery.Open;
except
  begin
  ShowMessage('wrong situation');
  end;
  end;

end;

procedure TFrm_ank.FormActivate(Sender: TObject);
var k:Integer;
begin
dm.doQuery.SQL.Text:='SELECT questionnaire.ank_nom, questionnaire.b_data,'+
'questionnaire.fio, questionnaire.kval, questionnaire.staj,'+
'questionnaire.kval, questionnaire.wish_cond, prof.prof_name'+' '+
  'FROM questionnaire' +' '+
    'inner join prof on questionnaire.id_prof=prof.id_prof';

dm.doQuery.Open;
dm.dogQuery.Open;
dm.ankQuery.Open;
ankPage.ActivePage:=SelankPage;
UpdBtn.Caption:='Изменить';
dm.doQuery.Open;
dm.ProfQuery.Open;
with Frm_ank do
for k := 0 to ComponentCount - 1 do
begin
if (Components[k] is TRadioButton) then
begin
  (Components[k] as TRadioButton).Checked:=False;
end;
end;

end;




procedure TFrm_ank.FormClose(Sender: TObject; var Action: TCloseAction);
var k,e:Integer;
begin
dm.dogQuery.Close;
dm.dogQuery.Close;
dm.ankQuery.Close;
d_flag:=0;
Check_wish_search.Enabled:=true;
Check_wish_search.Checked:=False;
CondankEdit.EditLabel.Caption:='Точное совпадение (по ФИО)';
with Frm_ank do
for k := 0 to ComponentCount - 1 do
begin
if (Components[k] is TRadioButton) then
begin
  (Components[k] as TRadioButton).Enabled:=True;
end;
end;
with Frm_ank do
for e := 0 to ComponentCount - 1 do
begin
if (Components[e] is TLabeledEdit) then
begin
  (Components[e] as TLabeledEdit).Enabled:=True;
end;
end;

end;

procedure TFrm_ank.FormCreate(Sender: TObject);
begin
 with Frm_ank do
begin
  width:=1024;
  height:=768;
  Position:=poScreenCenter;
end;
end;

procedure TFrm_ank.ins_BtnClick(Sender: TObject);
begin
//if  (cond_pay_inp.Text<>'')and(Cont_face_inp.Text<>'')and (compamy_inp.Text<>'')
//and  (c_adrees_inp.Text<>'')and (c_contdata_inp.Text<>'')  then
//begin
//try
//with dm.dogQuery do
//begin
//  Active:=false;
//  SQL.Clear;
//  SQL.Text:='INSERT INTO dogovor (pay_cond, cont_face, company,'+
//  'c_adress, c_contdara, dogterm )VALUES('
//  +QuotedStr(cond_pay_inp.Text)+','+QuotedStr(Cont_face_inp.Text)+','+
//  QuotedStr(compamy_inp.Text)+','+QuotedStr(c_adrees_inp.Text)+','+
//  QuotedStr(c_contdata_inp.Text)+','
//  +QuotedStr(FrmMain.DateToStr_(dog_term_inp.Date))+')';
//  ExecSQL;
//  sql.Text:='select * from dogovor;';
//  Active:=true;
//  close;
//  open;
//end;
//  MessageDlg('Заполните все поля',mtInformation,[mbOK],0);
//  Beep();
//  cond_pay_inp.Clear;
//  Cont_face_inp.Clear;
//  compamy_inp.Clear;
//  c_adrees_inp.Clear;
//  c_contdata_inp.Clear;
//  dog_term_inp.DateTime:=Now;
//except
//begin
//  ShowMessage('wrong situation');
//  Exit;
//end;
//end;
//end
//else
//begin
//  MessageDlg('Изменения внесены',mtError,[mbOK],0);
//  Beep();
//  Exit;
//end;
end;

procedure TFrm_ank.RadioankselResetClick(Sender: TObject);
var i,j:Integer;
begin
    if RadioankselReset.Checked=True then
begin
  with Frm_ank do
    for I := 0 to ComponentCount - 1 do
     begin
       if (Components[i] is TLabeledEdit)  then
        begin
          (Components[i] as TLabeledEdit).Clear;
        end;
     end;
     with dm.ankQuery do
     begin
     Close;
     sql.Clear;
     SQL.Text:='select * from questionnaire;';
     Open;
     end;
    with Frm_ank do
    for j := 0 to ComponentCount - 1 do
    begin
      if(Components[j] is TRadioButton)  then
      begin
        (Components[j] as TRadioButton).Checked:=False;
      end;
    end;
end;
  Check_wish_search.Enabled:=true;
  Check_wish_search.Checked:=False;
  CondankEdit.EditLabel.Caption:='Точное совпадение (по ФИО в анкете)';



end;

procedure TFrm_ank.Radio_staj_nameClick(Sender: TObject);
begin
if Radio_staj_name.Checked=true then
  begin
    try
     Radio_kval_grupp.Checked:=false;
     RadioankselReset.Checked:=False;
     with dm.ankQuery do
     begin
      close;
      sql.Clear;
      sql.Text:='select * from questionnaire order by staj asc ';
      Open;
     end;
    except
    begin
      ShowMessage('wrong situation');
    end;
    end;
  end;

end;

procedure TFrm_ank.Radio_kval_gruppClick(Sender: TObject);
begin
if Radio_kval_grupp.Checked=true then
  begin
    try
     Radio_staj_name.Checked:=false;
     RadioankselReset.Checked:=False;
     with dm.ankQuery do
     begin
      close;
      sql.Clear;
      sql.Text:='select * from questionnaire order by kval asc ';
      Open;
     end;
    except
    begin
      ShowMessage('wrong situation');
    end;
    end;
  end;
end;

procedure TFrm_ank.SeanklBtnClick(Sender: TObject);
begin
try
    dm.ankQuery.close;
    dm.ankQuery.SQL.Text:='select * from questionnaire where questionnaire.fio='+
    QuotedStr(CondankEdit.Text);
    dm.ankQuery.open;
except
begin
    ShowMessage('Wrong situation');
    exit;
end;
end;

end;

procedure TFrm_ank.UpdBtnClick(Sender: TObject);
begin
//           with dm.doQuery do
//           begin
//           close;
//           sql.Clear;
//           SQL.Text:='Update dogovor set   cont_face='
//            +QuotedStr(seCfaceEdit.Text)+'where dogovor.id_dog='
//            +dm.dogQuery.FieldByName('id_dog').AsString;
//            ExecSQL;
//            SQL.Text:='select * from  dogovor;';
//            Open;
//           close;
//            Open;
//
//           end;
//               MessageDlg('Изменения внесены',mtInformation,[mbOK],0);

end;

procedure TFrm_ank.Upd_contdataBtnClick(Sender: TObject);
begin
//        with dm.doQuery do
//        begin
//        Close;
//        SQL.Clear;
//        SQL.Text:='Update dogovor set  c_contdara='
//         +QuotedStr(set_contdata_inp.Text)+'where dogovor.id_dog='
//         +dm.dogQuery.FieldByName('id_dog').AsString;
//          ExecSQL;
//        SQL.Text:='select * from  dogovor;';
//        Open;
//        Close;
//        Open;
//        end;
//        MessageDlg('Изменения внесены',mtInformation,[mbOK],0);
end;

end.
