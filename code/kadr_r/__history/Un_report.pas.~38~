unit Un_report;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, Grids, DBGrids, StdCtrls, ExtCtrls, DBCtrls;

type
  TFrm_report = class(TForm)
    reportPage: TPageControl;
    prof_list_tab: TTabSheet;
    reportbtnPanel: TPanel;
    reportGid: TDBGrid;
    vak_prof_page: TTabSheet;
    Data_outBox: TGroupBox;
    reportbtnBox: TGroupBox;
    profBox: TGroupBox;
    Staticprof: TStaticText;
    profDBL: TDBLookupComboBox;
    prof_vakGrd: TDBGrid;
    company_page: TTabSheet;
    reportbtncBox: TGroupBox;
    companyoutdata: TGroupBox;
    companydrd: TDBGrid;
    worker_accept_page: TTabSheet;
    worker_acept_repotr: TTabSheet;
    termBox: TGroupBox;
    begin_terlmlbl: TStaticText;
    repbtnbox: TGroupBox;
    GrpBx: TGroupBox;
    repGrd: TDBGrid;
    end_term_lbl: TStaticText;
    report_begin_date_inp: TDateTimePicker;
    report_end_date_inp: TDateTimePicker;
    inp_box: TGroupBox;
    reportbeginlbl: TStaticText;
    report_endlbl: TStaticText;
    begin_date_inp: TDateTimePicker;
    end_date_inp: TDateTimePicker;
    btBox: TGroupBox;
    dtBox: TGroupBox;
    dtgrd: TDBGrid;
    proflstbtn: TButton;
    vak_profBtn: TButton;
    company_reportBtn: TButton;
    acept_lstBtn: TButton;
    procedure reportButtonClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure proflistBtnClick(Sender: TObject);
    procedure vak_profBtnClick(Sender: TObject);
    procedure company_reportBtnClick(Sender: TObject);
    procedure acept_lstBtnClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_report: TFrm_report;

implementation

uses Unmain, Un_dm, DB, ADODB;

{$R *.dfm}

procedure TFrm_report.acept_lstBtnClick(Sender: TObject);
begin
with dm.reportQuery do
begin
  Open;
  SQL.Clear;
  sql.Text:='select vakanlist.nomvlist, questionarie.fio,'+' '+
'vakanlist.datein,case when vakanlist.res=1'+ ' '+
 'then'+' '+#39+ 'Принят'+#39+' '+ 'else'+' '+#39'Не принят'+#39+' '+ 'end as vak_res,'+
  'vakanlist.dateres,vakansia.position from vakanlist inner join  questionarie'+
  ' '+'on questionarie.ank_nom=vakanlist.ank_nom inner join vakansia on'+' '+
    'vakansia.id_vakans=vakanlist.id_vakans   where 1=1  and vakanlist.res=1 '+' '+
    'and vakanlist.dateres between '+QuotedStr(FrmMain.DateToStr_(report_begin_date_inp.Date))+'and'+' '+
    QuotedStr(FrmMain.DateToStr_(report_end_date_inp.DateTime));
  ExecSQL;
  Close;
  Open;
end;
end;

procedure TFrm_report.company_reportBtnClick(Sender: TObject);
begin
with dm.reportQuery do
begin
  open;
  sql.clear;
  sql.Text:='select'+' '+
  'dogovor.id_dog,'+' '+
	'dogovor.pay_cond,'+' '+
'	dogovor.cont_face,'+''+
'	dogovor.company,'+' '+
'	dogovor.c_adress,'+' '+
	'dogovor.c_contdata,'+' '+
	'dogovor.dogterm'+' '+
'	from dogovor'+' '+
	'where 1=1';
  ExecSQL;
  Close;
  Open;
end;
end;

procedure TFrm_report.FormActivate(Sender: TObject);
var d:Integer;
begin
dm.dogQuery.Open;
dm.ProfQuery.Open;
dm.reportQuery.Open;
Frm_report.reportPage.ActivePage:=company_page;
with Frm_report do
for d := 0 to ComponentCount - 1 do
begin
if (Components[d] is TRadioButton) then
begin
  (Components[d] as TDateTimePicker).Date:=Now;
end;
end;
end;

procedure TFrm_report.FormClose(Sender: TObject; var Action: TCloseAction);
begin
dm.ProfQuery.Close;
dm.resQuery.SQL.Clear;
dm.reportQuery.Close;
end;

procedure TFrm_report.FormCreate(Sender: TObject);
begin
with Frm_report do
begin
  width:=1024;
  height:=768;
  Position:=poScreenCenter;
end;
end;

procedure TFrm_report.proflistBtnClick(Sender: TObject);
begin
ShowMessage('test');
end;

procedure TFrm_report.reportButtonClick(Sender: TObject);
begin
with dm.reportQuery do
begin
open;
SQL.Clear;
SQL.Text:='select id_prof, prof_name, prof_group'+' '+
		'from prof where 1=1';
ExecSQL;
Close;
Open
end;
end;

procedure TFrm_report.vak_profBtnClick(Sender: TObject);
begin
with dm.reportQuery do
begin
Open;
SQL.Clear;
SQL.Text:='select vakansia.id_vakans,vakansia.position,vakansia.pay,dogovor.company,'+
  'prof.prof_name,vakansia.quantity,case when'+ ' '+
  'vakansia.vak_st=0  then'+#39+ 'Вакансии есть'+#39+' '+  'else'+ ' '+
  #39+'Вакансий нет'+#39+' '+ 'end as vak_free from vakansia inner'+' '+
  'join dogovor on'+' '+ 'dogovor.id_dog=vakansia.id_dog inner join prof on'+' '+
  'prof.id_prof=vakansia.id_prof where vakansia.quantity >0'+
  'and  prof.id_prof='+dm.ProfQuery.FieldByName('id_prof').AsString;
ExecSQL;
Close;
open;
end;
end;

end.
