unit Un_pfor;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, ExtCtrls, StdCtrls, Grids, DBGrids;

type
  TFrm_pfor = class(TForm)
    PfroPage: TPageControl;
    SelPage: TTabSheet;
    TabSheet2: TTabSheet;
    TabSheet3: TTabSheet;
    TabSheet4: TTabSheet;
    ConditionBox: TGroupBox;
    DataBox: TGroupBox;
    ButtonoBox: TGroupBox;
    DataGrid: TDBGrid;
    SelButton: TButton;
    selPanel: TPanel;
    Radio_prof_name: TRadioButton;
    Radio_prof_grupp: TRadioButton;
    RadioReset: TRadioButton;
    condPanel: TPanel;
    CondEdit: TLabeledEdit;
    fndPanel: TPanel;
    fndEdit: TLabeledEdit;
    procedure FormActivate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure SelButtonClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure RadioResetClick(Sender: TObject);
    procedure Radio_prof_nameClick(Sender: TObject);
    procedure Radio_prof_gruppClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_pfor: TFrm_pfor;

implementation

uses Un_dm, Unmain, DB;

{$R *.dfm}

procedure TFrm_pfor.FormActivate(Sender: TObject);
begin
dm.ProfQuery.Open;
end;

procedure TFrm_pfor.FormClose(Sender: TObject; var Action: TCloseAction);
begin
dm.ProfQuery.Close;
end;

procedure TFrm_pfor.FormCreate(Sender: TObject);
begin
  with Frm_pfor do
begin
  width:=1024;
  height:=768;
  Position:=poScreenCenter;
end;
end;

procedure TFrm_pfor.RadioResetClick(Sender: TObject);
 var i,j:Integer;
begin
if RadioReset.Checked=True then
begin
  with Frm_pfor do
    for I := 0 to ComponentCount - 1 do
     begin
       if (Components[i] is TLabeledEdit)  then
        begin
          (Components[i] as TLabeledEdit).Clear;
        end;
     end;
     with dm.ProfQuery do
     begin
     Close;
     sql.Clear;
     SQL.Text:='select * from prof;';
     Open;
     end;
    with Frm_pfor do 
    for j := 0 to ComponentCount - 1 do
    begin
      if(Components[j] is TRadioButton)  then
      begin
        (Components[j] as TRadioButton).Checked:=False;
      end;
    end;
end;
end;

procedure TFrm_pfor.Radio_prof_gruppClick(Sender: TObject);
begin
 if Radio_prof_grupp.Checked then
 begin
   try
    Radio_prof_name.Checked:=False;
    RadioReset.Checked:=False;
    with dm.ProfQuery do 
    begin
     close;
     sql.Clear;
     sql.Text:='select * from prof order by  prof_group asc';
     Open;
    end; 
   except
   begin
     ShowMessage('wrong situation');
   end;
   end;
 end;
 
end;

procedure TFrm_pfor.Radio_prof_nameClick(Sender: TObject);
begin
if Radio_prof_name.Checked=true then
  begin
    try
     Radio_prof_grupp.Checked:=false;
     RadioReset.Checked:=False;
     with dm.ProfQuery do
     begin
      close;
      sql.Clear;
      sql.Text:='select * from prof order by prof_name asc ';
      Open;
     end;
    except
    begin
      ShowMessage('wrong situation');
    end;
    end;
  end;
end;

procedure TFrm_pfor.SelButtonClick(Sender: TObject);
begin
try
    dm.ProfQuery.close;
    dm.ProfQuery.SQL.Text:='select * from prof where prof.prof_name='+
    QuotedStr(CondEdit.Text);
    dm.ProfQuery.open;
except 
begin
    ShowMessage('Wrong situation');
end;
end;

end;



end.
