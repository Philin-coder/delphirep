unit Un_vak_lst;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, DBCtrls, StdCtrls, Grids, DBGrids, ExtCtrls, ComCtrls,ADODB,DateUtils;

type
  TFrm_vaklst = class(TForm)
    vaklstPage: TPageControl;
    SelresPage: TTabSheet;
    ConditionresBox: TGroupBox;
    seresPanel: TPanel;
    Radio_dl_r_group: TRadioButton;
    Radio_fio_r_grupp: TRadioButton;
    RadioresrselReset: TRadioButton;
    condresPanel: TPanel;
    CondresfioEdit: TLabeledEdit;
    fndresPanel: TPanel;
    fnd_dol_Edit: TLabeledEdit;
    DataresBox: TGroupBox;
    DataresGrd: TDBGrid;
    ButtonvakBox: TGroupBox;
    SelreslBtn: TButton;
    InsresPage: TTabSheet;
    InpresBox: TGroupBox;
    DataOutdresBox: TGroupBox;
    resinpBtnBox: TGroupBox;
    ins_res_Btn: TButton;
    UpdvakPage: TTabSheet;
    UpddataBox: TGroupBox;
    delvaklPage: TTabSheet;
    del_vakdataBox: TGroupBox;
    ankLbl: TLabel;
    delvakdatadgComboBox: TDBLookupComboBox;
    dlankbtnBox: TGroupBox;
    dlvakBtn: TButton;
    dldaraBox: TGroupBox;
    UpddatankBox: TGroupBox;
    Upd_vak_st_Btn: TButton;
    compvakLbl: TLabel;
    resankDBL: TDBLookupComboBox;
    prfvakLbl: TLabel;
    profvakdbl: TDBLookupComboBox;
    quant_inp: TLabeledEdit;
    vakstlbl: TLabel;
    vakstBox: TComboBox;
    DBLookupComboBox_prof: TDBLookupComboBox;
    vakprofLbl: TLabel;
    vak_stBox: TComboBox;
    vak_st_lbl: TLabel;
    insresgrd: TDBGrid;
    DBGrid2: TDBGrid;
    DBGrid3: TDBGrid;
    date_in_inp: TDateTimePicker;
    DateTimePicker2: TDateTimePicker;
    beginlbl1: TStaticText;
    endlbl: TStaticText;
    aceptBox: TCheckBox;
    Check_res_search: TCheckBox;
    res_dateinlbl: TLabel;
    res_Datein_inp: TDateTimePicker;
    resEdit: TEdit;
    resUpDown: TUpDown;
    procedure FormCreate(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure SelreslBtnClick(Sender: TObject);
    procedure Radio_dl_r_groupClick(Sender: TObject);
    procedure Radio_fio_r_gruppClick(Sender: TObject);
    procedure RadioresrselResetClick(Sender: TObject);
    procedure fnd_dol_EditKeyPress(Sender: TObject; var Key: Char);
    procedure Check_res_searchClick(Sender: TObject);
    procedure DataresGrdDrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
    procedure aceptBoxClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_vaklst: TFrm_vaklst;
  var d_flag:Integer;
  var accept_flag:Integer;

implementation

uses Un_dm, Unmain, DB;

{$R *.dfm}
procedure TFrm_vaklst.aceptBoxClick(Sender: TObject);
begin
if aceptBox.Checked  then
begin
  accept_flag:=1;
end
else
begin
  accept_flag:=0;
end;
end;

procedure TFrm_vaklst.Check_res_searchClick(Sender: TObject);
var  StartDate, EndDate: TDateTime;
begin
  dm.resQuery.Close;
  dm.resQuery.SQL.Clear;
  dm.resQuery.Parameters.Clear;
  if Check_res_search.Checked then
  begin
    StartDate := date_in_inp.Date - 3;
    EndDate := date_in_inp.Date + 3;
    dm.resQuery.SQL.Text :=
      'SELECT ' +
      '  vakanlist.nomvlist, ' +
      '  questionarie.fio, ' +
      '  vakanlist.datein, ' +
      '  CASE WHEN vakanlist.res = 1 ' +
      '    THEN ''Принят'' ELSE ''Не принят'' ' +
      '  END AS vak_res, ' +
      '  vakanlist.dateres, ' +
      '  vakansia.position ' +
      'FROM vakanlist ' +
      'INNER JOIN questionarie ' +
      '  ON questionarie.ank_nom = vakanlist.ank_nom ' +
      'INNER JOIN vakansia ' +
      '  ON vakansia.id_vakans = vakanlist.id_vakans ' +
      'WHERE 1=1 ' +
      '  AND vakanlist.res = 0 ' +
      '  AND vakanlist.dateres BETWEEN :start_date AND :end_date';
    dm.resQuery.Parameters.ParamByName('start_date').DataType := ftDateTime;
    dm.resQuery.Parameters.ParamByName('start_date').Value := StartDate;
    dm.resQuery.Parameters.ParamByName('end_date').DataType := ftDateTime;
    dm.resQuery.Parameters.ParamByName('end_date').Value := EndDate;
  end
  else
  begin
    dm.resQuery.SQL.Text :=
      'SELECT ' +
      '  vakanlist.nomvlist, ' +
      '  questionarie.fio, ' +
      '  vakanlist.datein, ' +
      '  CASE WHEN vakanlist.res = 1 ' +
      '    THEN ''Принят'' ELSE ''Не принят'' ' +
      '  END AS vak_res, ' +
      '  vakanlist.dateres, ' +
      '  vakansia.position ' +
      'FROM vakanlist ' +
      'INNER JOIN questionarie ' +
      '  ON questionarie.ank_nom = vakanlist.ank_nom ' +
      'INNER JOIN vakansia ' +
      '  ON vakansia.id_vakans = vakanlist.id_vakans ' +
      'WHERE 1=1';
      DataresGrd.Canvas.Brush.Color:=clWindow;
  end;
  try
    dm.resQuery.Open;
  except
    on E: Exception do
      ShowMessage('Ошибка выполнения запроса: ' + E.Message);
  end;
end;

procedure TFrm_vaklst.DataresGrdDrawColumnCell(Sender: TObject;
  const Rect: TRect; DataCol: Integer; Column: TColumn; State: TGridDrawState);
begin

  if accept_flag = 0 then
  begin

    DataresGrd.Canvas.Brush.Color := DataresGrd.Color;
    DataresGrd.Canvas.Font.Color := DataresGrd.Font.Color;
  end
  else
  begin

    if DM.resQuery.FieldByName('vak_res').AsString = 'Не принят' then
    begin
      DataresGrd.Canvas.Brush.Color := clRed;
      DataresGrd.Canvas.Font.Color := clWhite;
    end
    else
    begin
      // Стандартные цвета для остальных случаев
      DataresGrd.Canvas.Brush.Color := DataresGrd.Color;
      DataresGrd.Canvas.Font.Color := DataresGrd.Font.Color;
    end;
  end;


  DataresGrd.Canvas.FillRect(Rect);
  if Column.Alignment = taRightJustify then
    DataresGrd.Canvas.TextOut(
      Rect.Right - 2 - DataresGrd.Canvas.TextWidth(Column.Field.Text),
      Rect.Top + 2,
      Column.Field.Text
    )
  else
    DataresGrd.Canvas.TextOut(
      Rect.Left + 2,
      Rect.Top + 2,
      Column.Field.Text
    );

end;

procedure TFrm_vaklst.fnd_dol_EditKeyPress(Sender: TObject; var Key: Char);
begin
try
   Check_res_search.Enabled:=false;
   dm.resQuery.SQL.Text:='select vakanlist.nomvlist, questionarie.fio,'+' '+
'vakanlist.datein,case when vakanlist.res=1'+ ' '+
 'then'+' '+#39+ 'Принят'+#39+' '+ 'else'+' '+#39'Не принят'+#39+' '+ 'end as vak_res,'+
  'vakanlist.dateres,vakansia.position from vakanlist inner join  questionarie'+
  ' '+'on questionarie.ank_nom=vakanlist.ank_nom inner join vakansia on'+' '+
    'vakansia.id_vakans=vakanlist.id_vakans   where 1=1'
  +'and vakansia.position like'+
   QuotedStr(Concat(fnd_dol_Edit.Text,#37));
   dm.resQuery.close;
   dm.resQuery.Open;
except
  begin
  ShowMessage('wrong situation');
  end;
  end;

end;

procedure TFrm_vaklst.FormActivate(Sender: TObject);
var k,d:Integer;
begin
resEdit.Clear;
resUpDown.Position:=0;
dm.doQuery.Close;
dm.doQuery.SQL.Clear;
dm.doQuery.SQL.Text:='select vakanlist.nomvlist, questionarie.fio,'+' '+
'vakanlist.datein,case when vakanlist.res=1'+ ' '+
 'then'+' '+#39+ 'Принят'+#39+' '+ 'else'+' '+#39'Не принят'+#39+' '+ 'end as vak_res,'+
  'vakanlist.dateres,vakansia.position from vakanlist inner join  questionarie'+
  ' '+'on questionarie.ank_nom=vakanlist.ank_nom inner join vakansia on'+' '+
    'vakansia.id_vakans=vakanlist.id_vakans   where 1=1';
Upd_vak_st_Btn.Caption:='Изменить';
dm.doQuery.Open;
dm.VaKQuery.Open;
dm.resQuery.Open;
with Frm_vaklst do
for k := 0 to ComponentCount - 1 do
begin
if (Components[k] is TRadioButton) then
begin
  (Components[k] as TRadioButton).Checked:=False;
end;
end;

with Frm_vaklst do
for d := 0 to ComponentCount - 1 do
begin
if (Components[d] is TDateTimePicker) then
begin
  (Components[d] as TDateTimePicker).Date:=Now;
end;
end;
accept_flag:=0;
end;

procedure TFrm_vaklst.FormClose(Sender: TObject; var Action: TCloseAction);
var k,e,q:Integer;
begin
resUpDown.Position:=0;
resEdit.Clear;
with DM do
begin
for q := 0 to ComponentCount - 1 do
begin
if (Components[q] is TADOQuery) then
begin
  (Components[q] as TADOQuery).Close;
end;
end;
d_flag:=0;
accept_flag:=0;
Check_res_search.Enabled:=true;
Check_res_search.Checked:=False;
CondresfioEdit.EditLabel.Caption:='Точное совпадение (по фио)';
with Frm_vaklst do
for k := 0 to ComponentCount - 1 do
begin
if (Components[k] is TRadioButton) then
begin
  (Components[k] as TRadioButton).Enabled:=True;
end;
end;
with Frm_vaklst do
for e := 0 to ComponentCount - 1 do
begin
if (Components[e] is TLabeledEdit) then
begin
  (Components[e] as TLabeledEdit).Enabled:=True;
end;
end;
end;

end;

procedure TFrm_vaklst.FormCreate(Sender: TObject);
var d:Integer;
begin
with Frm_vaklst do
begin
  width:=1024;
  height:=768;
  Position:=poScreenCenter;
end;
 with Frm_vaklst do
for d := 0 to ComponentCount - 1 do
begin
if (Components[d] is TDateTimePicker) then
begin
  (Components[d] as TDateTimePicker).Date:=Now;
end;
end;
end;

procedure TFrm_vaklst.Radio_fio_r_gruppClick(Sender: TObject);
begin
if Radio_fio_r_grupp.Checked=true then
  begin
    try
     Radio_dl_r_group.Checked:=false;
     RadioresrselReset.Checked:=False;
     with dm.resQuery do
     begin
      close;
      sql.Clear;
      sql.Text:='select vakanlist.nomvlist, questionarie.fio,'+' '+
'vakanlist.datein,case when vakanlist.res=1'+ ' '+
 'then'+' '+#39+ 'Принят'+#39+' '+ 'else'+' '+#39'Не принят'+#39+' '+ 'end as vak_res,'+
  'vakanlist.dateres,vakansia.position from vakanlist inner join  questionarie'+
  ' '+'on questionarie.ank_nom=vakanlist.ank_nom inner join vakansia on'+' '+
    'vakansia.id_vakans=vakanlist.id_vakans   where 1=1 order by questionarie.fio asc';
      Open;
     end;
    except
    begin
      ShowMessage('wrong situation');
    end;
    end;
  end;
end;

procedure TFrm_vaklst.RadioresrselResetClick(Sender: TObject);
var i,j:Integer;
begin
 if RadioresrselReset.Checked=True then
begin
accept_flag:=0;
  with Frm_vaklst do
    for I := 0 to ComponentCount - 1 do
     begin
       if (Components[i] is TLabeledEdit)  then
        begin
          (Components[i] as TLabeledEdit).Clear;
        end;
     end;
     with dm.resQuery do
     begin
     Close;
    sql.clear;
     SQL.Text:='select vakanlist.nomvlist, questionarie.fio,'+' '+
'vakanlist.datein,case when vakanlist.res=1'+ ' '+
 'then'+' '+#39+ 'Принят'+#39+' '+ 'else'+' '+#39'Не принят'+#39+' '+ 'end as vak_res,'+
  'vakanlist.dateres,vakansia.position from vakanlist inner join  questionarie'+
  ' '+'on questionarie.ank_nom=vakanlist.ank_nom inner join vakansia on'+' '+
    'vakansia.id_vakans=vakanlist.id_vakans   where 1=1 ';
     Open;
     end;
    with Frm_vaklst do
    for j := 0 to ComponentCount - 1 do
    begin
      if(Components[j] is TRadioButton)  then
      begin
        (Components[j] as TRadioButton).Checked:=False;
      end;
    end;
end;
  Check_res_search.Enabled:=true;
  Check_res_search.Checked:=False;
  CondresfioEdit.EditLabel.Caption:='Точное совпадение (по фио)';
  DataresGrd.Canvas.Brush.Color:=clWindow;
end;

procedure TFrm_vaklst.Radio_dl_r_groupClick(Sender: TObject);
begin
if Radio_dl_r_group.Checked=true then
  begin
    try
     Radio_fio_r_grupp.Checked:=false;
     RadioresrselReset.Checked:=False;
     with dm.resQuery do
     begin
      close;
      sql.Clear;
      sql.Text:='select * from vakanlist';
      sql.Text:='select vakanlist.nomvlist, questionarie.fio,'+' '+
'vakanlist.datein,case when vakanlist.res=1'+ ' '+
 'then'+' '+#39+ 'Принят'+#39+' '+ 'else'+' '+#39'Не принят'+#39+' '+ 'end as vak_res,'+
  'vakanlist.dateres,vakansia.position from vakanlist inner join  questionarie'+
  ' '+'on questionarie.ank_nom=vakanlist.ank_nom inner join vakansia on'+' '+
    'vakansia.id_vakans=vakanlist.id_vakans   where 1=1 order by vakansia.position desc';
    Open;
     end;
    except
    begin
      ShowMessage('wrong situation');
    end;
    end;
  end;
end;

procedure TFrm_vaklst.SelreslBtnClick(Sender: TObject);
begin
try
    dm.resQuery.close;
    dm.resQuery.SQL.Text:='select vakanlist.nomvlist, questionarie.fio,'+' '+
'vakanlist.datein,case when vakanlist.res=1'+ ' '+
 'then'+' '+#39+ 'Принят'+#39+' '+ 'else'+' '+#39'Не принят'+#39+' '+ 'end as vak_res,'+
  'vakanlist.dateres,vakansia.position from vakanlist inner join  questionarie'+
  ' '+'on questionarie.ank_nom=vakanlist.ank_nom inner join vakansia on'+' '+
    'vakansia.id_vakans=vakanlist.id_vakans   where 1=1 and questionarie.fio='+
    QuotedStr(CondresfioEdit.Text);
    dm.resQuery.open;
except
begin
    ShowMessage('Wrong situation');
    exit;
end;
end;
end;

end.
