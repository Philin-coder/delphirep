unit Un_aut;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, ImgList, ComCtrls, ToolWin,ADODB,db, StdCtrls, Grids,
  DBGrids;

type
  Tfrm_aut = class(TForm)
    autorToolBar: TToolBar;
    autselToolButton: TToolButton;
    autinsToolButton: TToolButton;
    autupdToolButton: TToolButton;
    autdelToolButton: TToolButton;
    autorImageList: TImageList;
    autorPC: TPageControl;
    sel_tab: TTabSheet;
    ins_tab: TTabSheet;
    updTab: TTabSheet;
    delTab: TTabSheet;
    Autor_condBox: TGroupBox;
    autorbtnBox: TGroupBox;
    Autor_grupperBox: TGroupBox;
    condedit_inp: TLabeledEdit;
    Autor_fnddEdit: TLabeledEdit;
    autorBtn: TButton;
    Author_data_Box: TGroupBox;
    fioRadio_grupper: TRadioButton;
    reset_Radio: TRadioButton;
    AutorGrid: TDBGrid;
    procedure FormActivate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure autorBtnClick(Sender: TObject);
  private
    procedure ChangeFormColor(Sender: TObject);
  public
    { Public declarations }
  end;

var
  frm_aut: Tfrm_aut;

implementation

uses Un_dm, Un_func, Un_main;

{$R *.dfm}
procedure Tfrm_aut.autorBtnClick(Sender: TObject);
begin
 try
 DM.Sel_autor_by_name.Parameters.ParamByName('@Name_A').Value :=
 (condedit_inp.Text);
    DM.Sel_autor_by_name.ExecProc;
    DM.AutQuery. Close;
    DM.AutQuery.Open;
  except
    on E: EADOError do
    begin
      ShowMessage('Ошибка БД: ' + E.Message);
    end;
    on E: Exception do
    begin
      // Обработка других ошибок
      ShowMessage('Общая ошибка: ' + E.Message);
    end;
  end;
end;

procedure TFrm_aut.ChangeFormColor(Sender: TObject);
begin
  if Sender is TToolButton then
  begin
    // Определяем, какая кнопка была нажата, по её Tag или Caption
    case TToolButton(Sender).Tag of
      0:autorPC.ActivePage:=delTab;  //Self.Color := clRed;       // Кнопка 1
      1:autorPC.ActivePage:=Updtab; //Self.Color := clGreen;     // Кнопка 2
      2: autorPC.ActivePage:=ins_Tab;//Self.Color := clBlue;      // Кнопка 3
      3:autorPC.ActivePage:=sel_Tab; //Self.Color := clYellow;    // Кнопка 4
    else
        autorPC.ActivePage:=sel_tab;
      //Self.Color := clWhite;        // Цвет по умолчанию
    end;
  end;
end;


procedure Tfrm_aut.FormActivate(Sender: TObject);
begin
  dm.autQuery.Open;
end;

procedure Tfrm_aut.FormClose(Sender: TObject; var Action: TCloseAction);
var
 q:Integer;
begin
  SaveFormState(Self);
   with dm do
 begin
    for q := 0 to ComponentCount - 1 do
 begin
    if(Components[q] is TADOQuery)  then
   begin
      (Components[q] as TADOQuery).Close;
 end;
 end;
 end;
end;

procedure Tfrm_aut.FormCreate(Sender: TObject);
const
  ButtonNames: array[0..3] of string = ('Удалить','Мзменить',
  'Добавить','Выбрать');
  var
  ButtonClicks: array of TNotifyEvent;
begin
 frm_aut.ShowHint:=true;
 UniformizeButtonsSize(Self,  273, 25);
 UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
 LoadFormState(Self);
  autorImageList.Clear;
  LoadIconFromResource('DELETE_ICON',1,autorImageList);
  LoadIconFromResource('EDIT_ICON',1,autorImageList);
  LoadIconFromResource('ADD_ICON',1,autorImageList);
  LoadIconFromResource('SELECT_ICON',1,autorImageList);
// ShowMessage(IntToStr(iconImageList.Count));
  SetLength(ButtonClicks, 4);
  ButtonClicks[0] := ChangeFormColor; // Обработчик для кнопки "Красный"
  ButtonClicks[1] := ChangeFormColor; // Обработчик для кнопки "Зелёный"
  ButtonClicks[2] := ChangeFormColor; // Обработчик для кнопки "Синий"
  ButtonClicks[3] := ChangeFormColor; // Обработчик для кнопки "Жёлтый"
  // Создание ToolBar с кнопками
  CreateToolBarWithButtons(Self, autorImageList, ButtonNames, ButtonClicks);
end;

end.
