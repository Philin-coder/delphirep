unit Un_autorize;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs,jpeg, ImgList, ExtCtrls, StdCtrls, ToolWin, ComCtrls, MPlayer;

type
  TFrm_author = class(TForm)
    authorImage: TImage;
    Log_pass_dataBox: TGroupBox;
    login_inp: TLabeledEdit;
    paswd_inp: TLabeledEdit;
    passwd_btnBox: TGroupBox;
    passwd_inp_Btn: TButton;
    passwdImage: TImage;
    pwdtb: TToolBar;
    TBbtn: TToolButton;
    AUTORImageList: TImageList;
    TButn_hide: TToolButton;
    autorMediaPlayer: TMediaPlayer;
    procedure FormCreate(Sender: TObject);
    procedure passwd_inp_BtnClick(Sender: TObject);
    procedure TBbtnClick(Sender: TObject);
    procedure TButn_hideClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_author: TFrm_author;

implementation

uses Un_func, Un_main;

{$R *.dfm}

procedure TFrm_author.FormCreate(Sender: TObject);
var Time_today:String;
begin
passwdImage.Visible:=False;
passwdImage.AutoSize:=true;
passwdImage.Stretch:=true;
With Frm_author do
begin
login_inp.PasswordChar:='*';
paswd_inp.PasswordChar:='*';
  Position:=poScreenCenter;
    Time_today:=GetTimeOfDay;
      if Time_today = 'Утро' then
        LoadImageFromResource('MORING_IMAGE',authorImage)
  else if Time_today = 'День' then
    LoadImageFromResource('DAY_IMAGE',authorImage)
  else if Time_today = 'Вечер' then
        LoadImageFromResource('EVENING_IMAGE',authorImage)
  else if time_today = 'Ночь' then
  LoadImageFromResource('NIGHT_IMAGE',authorImage);
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
     LoadIconFromResource('IYE',1,AUTORImageList);
     TBbtn.ImageIndex:=0;
     LoadIconFromResource('DS',1,AUTORImageList);
     TButn_hide.ImageIndex:=1;
     //ShowMessage(IntToStr(AUTORImageList.Count));

end;
with authorImage do
begin
 AutoSize:=True;
 Stretch:=true;
end;
end;

procedure TFrm_author.passwd_inp_BtnClick(Sender: TObject);
var
  is_pas_empty:Boolean;
  is_pas_valid:Boolean;
  filename:String;
  Attemts:Integer;
begin
    Attemts := 0;
is_pas_empty:=(Trim(login_inp.Text) = '')or(Trim(paswd_inp.Text) = '');
is_pas_valid:=(login_inp.Text='Логин')and(paswd_inp.Text='Пароль');
if  is_pas_empty then
begin
    MessageDlg('Пустые поля, или недопустииые значения',mtError, [mbOK], 0);
    Beep;
    Exit;
end;
if not is_pas_valid then
begin
    Inc(Attemts);
    MessageDlg('Введен невернеый пароль',mtError, [mbOK], 0);
    passwdImage.Visible:=True;
    LoadImageFromResource('BAD_PASS',passwdImage);
    Beep;
    ExtractResFile;
    filename:=FileExistsInAppDirectory('ryk.wav');
      if FileName <> '' then
      begin
       with autorMediaPlayer do
       begin
            FileName := ExtractFilePath(ParamStr(0)) + 'ryk.wav';
            Open;
            Play;

       end;
      end
  else
    ShowMessage('Файл не найден');
    if Attemts >= 3 then
    begin
      ShowMessage('Количество попыток превышено. Программа будет закрыта.');

      // Освобождение ресурсов медиаплеера
      if autorMediaPlayer.FileName <> '' then
      begin
        autorMediaPlayer.Close;
        autorMediaPlayer.FileName := '';
      end;

      // Закрытие программы
      Application.Terminate;
    end;
end

else
begin
passwdImage.Visible:=True;
LoadImageFromResource('GOOD_PASS',passwdImage);
Frm_main.Show;

end;

end;

procedure TFrm_author.TBbtnClick(Sender: TObject);
begin
paswd_inp.PasswordChar:= #0;
login_inp.PasswordChar:= #0;
end;

procedure TFrm_author.TButn_hideClick(Sender: TObject);
begin
  paswd_inp.PasswordChar:= '*';
login_inp.PasswordChar:= '*';
end;

end.
