unit Un_delivery;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, ImgList, ComCtrls, ToolWin,ADODB,db, StdCtrls, Grids,
  DBGrids, DBCtrls, Mask;

type
  Tfrm_delivery = class(TForm)
    delvToolBar: TToolBar;
    delvImageList: TImageList;
    delvPC: TPageControl;
    sel_tab: TTabSheet;
    ins_tab: TTabSheet;
    updTab: TTabSheet;
    delTab: TTabSheet;
    readerbtnBox: TGroupBox;
    reader_grupperBox: TGroupBox;
    readerselBtn: TButton;
    reader_data_Box: TGroupBox;
    readernaimRadio_grupper: TRadioButton;
    reader_reset_Radio: TRadioButton;
    readerGrid: TDBGrid;
    rd_upd_inp_box: TGroupBox;
    Upd_rd_data_Box: TGroupBox;
    rd_upd_lbl: TLabel;
    rd_updDBL: TDBLookupComboBox;
    upd_rd_btn_box: TGroupBox;
    upd_rd_Btn: TButton;
    rd_del_inp_Box: TGroupBox;
    rd_delLbl: TLabel;
    rd_delDBL: TDBLookupComboBox;
    rd_del_btn_Box: TGroupBox;
    rd_del_btn: TButton;
    rd_del_data_Box: TGroupBox;
    reader_condBox: TGroupBox;
    readercondedit_inp: TLabeledEdit;
    reader_fnddEdit: TLabeledEdit;
    aboutreaderPC: TPageControl;
    readerteansCB: TCheckBox;
    ins_r_data_Box: TGroupBox;
    Ins_rd_dataBox: TGroupBox;
    ins_reader_btn_Box: TGroupBox;
    Ins_book_insBtn: TButton;
    reader_datar_CB: TCheckBox;
    Name_r_inp: TLabeledEdit;
    date_b_lbl: TStaticText;
    ins_r_Grid: TDBGrid;
    Date_B_inp: TDateTimePicker;
    adr_r_inp: TLabeledEdit;
    Date_r_inp: TDateTimePicker;
    data_r_lbl: TStaticText;
    Tel_lbl: TStaticText;
    tel_inp: TMaskEdit;
    reader_updDBGrid: TDBGrid;
    upd_tel_lbl: TStaticText;
    upd_tel_inp: TMaskEdit;
    rd_delGrid: TDBGrid;
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormActivate(Sender: TObject);

  private
  procedure ChangeFormColor(Sender: TObject);
  public
    { Public declarations }
  end;

var
  frm_delivery: Tfrm_delivery;
implementation

uses Un_dm, Un_func, Un_main;

{$R *.dfm}
procedure Tfrm_delivery.ChangeFormColor(Sender: TObject);
begin
  if Sender is TToolButton then
  begin
    case TToolButton(Sender).Tag of
      0:delvPC.ActivePage:=delTab;
      1:delvPC.ActivePage:=Updtab;
      2:delvPC.ActivePage:=ins_Tab;
      3:delvPC.ActivePage:=sel_Tab;
    else
        delvPC.ActivePage:=sel_tab;
    end;
  end;
end;
procedure Tfrm_delivery.FormActivate(Sender: TObject);
begin
dm.autQuery.Open
dm.GenreQuery.Open;
dm.bookQuery.Open;
dm.docQuery.Open;
dm.readerQuery.Open;
end;

procedure Tfrm_delivery.FormClose(Sender: TObject; var Action: TCloseAction);
var
 q:Integer;
begin
 SaveFormState(Self);
   with dm do
 begin
    for q := 0 to ComponentCount - 1 do
 begin
    if(Components[q] is TADOQuery)  then
   begin
      (Components[q] as TADOQuery).Close;
 end;
 end;
 end;
end;

procedure Tfrm_delivery.FormCreate(Sender: TObject);
const
  ButtonNames: array[0..3] of string = ('Удалить','Изменить',
  'Добавить','Выбрать');
 var
  ButtonClicks: array of TNotifyEvent;
begin
 frm_delivery.ShowHint:=true;
 UniformizeButtonsSize(Self,  273, 25);
 UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
 LoadFormState(Self);
  delvImageList.Clear;
  LoadIconFromResource('DELETE_ICON',1,delvImageList);
  LoadIconFromResource('EDIT_ICON',1,delvImageList);
  LoadIconFromResource('ADD_ICON',1,delvImageList);
  LoadIconFromResource('SELECT_ICON',1,delvImageList);
// ShowMessage(IntToStr(iconImageList.Count));
  SetLength(ButtonClicks, 4);
  ButtonClicks[0] := ChangeFormColor;
  ButtonClicks[1] := ChangeFormColor;
  ButtonClicks[2] := ChangeFormColor;
  ButtonClicks[3] := ChangeFormColor;
  CreateToolBarWithButtons(Self, delvImageList, ButtonNames, ButtonClicks);
end;

end.
