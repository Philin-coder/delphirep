unit Un_stud;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, StdCtrls, Grids, DBGrids, ExtCtrls, ADODB,DB, DBCtrls;


type
  TFrm_stud = class(TForm)
    StudPage: TPageControl;
    SelTab: TTabSheet;
    InsTab: TTabSheet;
    UpdTab: TTabSheet;
    delTab: TTabSheet;
    StudgroupBox: TGroupBox;
    StudpbtnBox: TGroupBox;
    StudDataBox: TGroupBox;
    StudSelGrid: TDBGrid;
    StudSelBtn: TButton;
    StudCondBox: TGroupBox;
    Stud_condEdit: TLabeledEdit;
    Stud_fnd_adr_edit: TLabeledEdit;
    Stud_civ_groupradio: TRadioButton;
    StudResetRadio: TRadioButton;
    Grupp_inpBox: TGroupBox;
    Grupp_naim_g_inp: TLabeledEdit;
    Grupp_ins_btn_Box: TGroupBox;
    Grupp_insBtn: TButton;
    Grupp_DataInsBox: TGroupBox;
    Grupp_upd_inp_Box: TGroupBox;
    Grupplbl: TStaticText;
    GruppUpdDBL: TDBLookupComboBox;
    Grupp_upd_btn_Box: TGroupBox;
    Grupp_upd_Btn: TButton;
    Grupp_upd_dataBox: TGroupBox;
    delgrdatacBox: TGroupBox;
    delgrlbl: TStaticText;
    delgrDBL: TDBLookupComboBox;
    dlgrbtnBox: TGroupBox;
    delgrBtn: TButton;
    degrdataBox: TGroupBox;
    Stud_gr_groupradio: TRadioButton;
    Studfnd_famCb: TCheckBox;
    Grupp_insGrd: TDBGrid;
    GradeUpDown: TUpDown;
    GradeEdit: TEdit;
    gradelbl: TStaticText;
    SpecGrinsDBL: TDBLookupComboBox;
    SpecGinsLbl: TLabel;
    GruppupdDataGrd: TDBGrid;
    UpDown_upd_grade: TUpDown;
    gr_upd_grader: TEdit;
    grupdLbl: TLabel;
    TimePanel: TLabel;
    delgrgrid: TDBGrid;
    CbSecondnaim: TCheckBox;
    procedure FormActivate(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure StudSelBtnClick(Sender: TObject);
    procedure CbSecondnaimClick(Sender: TObject);
    procedure StudResetRadioClick(Sender: TObject);
    procedure Stud_civ_groupradioClick(Sender: TObject);
    procedure Stud_gr_groupradioClick(Sender: TObject);
    procedure s(Sender: TObject; var Key: Char);
    procedure Stud_fnd_adr_editKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_stud: TFrm_stud;
  var cb_st:Integer;

implementation

uses Un_dm, Un_main,Un_func;

{$R *.dfm}



procedure TFrm_stud.CbSecondnaimClick(Sender: TObject);
begin
if CbSecondnaim.Checked then
  cb_st:=1 else cb_st:=0;
end;

procedure TFrm_stud.FormActivate(Sender: TObject);
begin
  dm.GruppQuery.Open;
  dm.specQuery.Open;
  dm.StudQuery.Open;
end;

procedure TFrm_stud.FormClose(Sender: TObject; var Action: TCloseAction);
  var q:Integer;
begin
CbSecondnaim.Checked:=False;
  stud_condEdit.EditLabel.Caption:='Точное совпадение по условию';
  SaveFormState(Self);
 with dm do
 begin
    for q := 0 to ComponentCount - 1 do
 begin
    if(Components[q] is TADOQuery)  then
   begin
      (Components[q] as TADOQuery).Close;
 end;
 end;
 end;
end;

procedure TFrm_stud.FormCreate(Sender: TObject);
begin
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
  LoadFormState(Self);
  CbSecondnaim.Checked:=False;
  Stud_condEdit.Hint:='';
  cb_st:=0;
end;

procedure TFrm_stud.StudResetRadioClick(Sender: TObject);
var
  i,j,c:Integer;
begin
if StudResetRadio.Checked then
  with Frm_stud do
    for I := 0 to ComponentCount - 1 do
     begin
       if (Components[i] is TLabeledEdit)  then
        begin
          (Components[i] as TLabeledEdit).Clear;
        end;
     end;
       with Frm_stud do
    for c := 0 to ComponentCount - 1 do
     begin
       if (Components[c] is TCheckBox)  then
        begin
          (Components[c] as TCheckBox).Checked:=False;
        end;
     end;
     with dm.studQuery do
     begin
     Close;
     sql.Clear;
     SQL.Text:='select'+' '+
     '  stud.passp_fam + '' '' + stud.passp_naim + ISNULL('' '' + stud.passp_otch, '''') AS fio, ' +
    '  stud.stud_id, ' +
    '  stud.b_data, ' +
    '  CASE stud.pol WHEN 1 THEN ''Мужской'' ELSE ''Женский'' END AS sex, ' +
    '  stud.civ, ' +
    '  stud.region, ' +
    '  stud.gorod, ' +
    '  stud.adr, ' +
    '  CASE stud.mesto_jit WHEN 1 THEN ''Съем'' ELSE ''Общежитие'' END AS to_live, ' +
    '  stud.mod_t, ' +
    '  stud.dom_t, ' +
    '  stud.data_pr, ' +
    '  gruppa.naim_grup, ' +
    '  stud.st_email ' +
    'FROM stud ' +
    'INNER JOIN gruppa ON gruppa.grup_id = stud.grup_id ' +
    'INNER JOIN spec ON spec.spec_id = gruppa.spec_id ' +
    'WHERE 1=1 ' +
    '  AND stud.data_ot IS NULL ' +
    '  AND is_akadem = 0 ';
    cb_st:=0;
     Open;
     end;
    with Frm_stud do
    for j := 0 to ComponentCount - 1 do
    begin
      if(Components[j] is TRadioButton)  then
      begin
        (Components[j] as TRadioButton).Checked:=False;
      end;
    end;
     Studfnd_famCb.Checked:=False;
end;









procedure TFrm_stud.StudSelBtnClick(Sender: TObject);
var
 InputString, p1, p2, p3: string;
  sel_family_and_naim: TADOStoredProc;
begin
case  cb_st of
1:
begin
  Stud_condEdit.Hint:='Примнр Поиска по  ФИО:'+#10#13+'Рахмон Эмоммалм';
  InputString := Stud_condEdit.Text;
  InputString := Stud_condEdit.Text;
  if NormalizeStringAndExtractParams2(InputString, p1, p2) then
  begin

    Stud_condEdit.Text := InputString;

  sel_family_and_naim := nil;
  try
    sel_family_and_naim := TADOStoredProc.Create(nil);
    try
      with sel_family_and_naim do
      begin
        Connection := DM.Connection;
        if not Connection.Connected then
          raise Exception.Create('Соединение с базой не установлено');
        ProcedureName := 'sel_family_and_naim';
        Parameters.Clear;
        Parameters.CreateParameter('passp_fam', ftString,
        pdInput, 1000,
        P1);
        Parameters.CreateParameter('passp_naim', ftString,
        pdInput, 1000,
        P2);
        Open;
        DM.StudQuery.Close;
        DM.StudQuery.Recordset :=   sel_family_and_naim.Recordset;
      end;
    except
      on E: EADOError do
        ShowMessage('Ошибка ' + E.Message);
      on E: Exception do
        ShowMessage('Ошибка: ' + E.Message);
    end;
  finally
    FreeAndNil(sel_family_and_naim);
  end;

  end
  else
  begin

    Stud_condEdit.Clear;
  end;

  end;
0:
begin
    Stud_condEdit.Hint:='Примнр Поиска по  ФИО:'+#10#13+'Сухов Федор Иванович';
  InputString := Stud_condEdit.Text;
  if NormalizeStringAndExtractParams3(InputString, p1, p2, p3) then
  begin
    // Обновляем текст в Stud_condEdit
    Stud_condEdit.Text := InputString;

    // Выводим результаты
    ShowMessage('Первое слово: ' + p1);
    ShowMessage('Второе слово: ' + p2);
    ShowMessage('Третье слово: ' + p3);
  end
  else
  begin
    // Если обработка не удалась, очищаем поле
    Stud_condEdit.Clear;
  end;
end;
end;

end;

procedure TFrm_stud.Stud_civ_groupradioClick(Sender: TObject);
begin
if stud_civ_groupradio.Checked=true then
  begin
    try
     with dm.StudQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
      'select '+
       '  stud.passp_fam + '' '' + stud.passp_naim + ISNULL('' '' + stud.passp_otch, '''') AS fio, ' +
    '  stud.stud_id, ' +
    '  stud.b_data, ' +
    '  CASE stud.pol WHEN 1 THEN ''Мужской'' ELSE ''Женский'' END AS sex, ' +
    '  stud.civ, ' +
    '  stud.region, ' +
    '  stud.gorod, ' +
    '  stud.adr, ' +
    '  CASE stud.mesto_jit WHEN 1 THEN ''Съем'' ELSE ''Общежитие'' END AS to_live, ' +
    '  stud.mod_t, ' +
    '  stud.dom_t, ' +
    '  stud.data_pr, ' +
    '  gruppa.naim_grup, ' +
    '  stud.st_email ' +
    'FROM stud ' +
    'INNER JOIN gruppa ON gruppa.grup_id = stud.grup_id ' +
    'INNER JOIN spec ON spec.spec_id = gruppa.spec_id ' +
    'WHERE 1=1 ' +
    '  AND stud.data_ot IS NULL ' +
    '  AND is_akadem = 0 '+ ' '+
      'order by civ desc';
      Open;
     end;
    except on E: EADOError do
    begin
      ShowMessage('ошибка'+' '+E.Message);
    end;
    end;
  end;
end;

procedure TFrm_stud.Stud_fnd_adr_editKeyPress(Sender: TObject; var Key: Char);
begin
try

   dm.studQuery.SQL.Text:='select'+' '+
           '  stud.passp_fam + '' '' + stud.passp_naim + ISNULL('' '' + stud.passp_otch, '''') AS fio, ' +
    '  stud.stud_id, ' +
    '  stud.b_data, ' +
    '  CASE stud.pol WHEN 1 THEN ''Мужской'' ELSE ''Женский'' END AS sex, ' +
    '  stud.civ, ' +
    '  stud.region, ' +
    '  stud.gorod, ' +
    '  stud.adr, ' +
    '  CASE stud.mesto_jit WHEN 1 THEN ''Съем'' ELSE ''Общежитие'' END AS to_live, ' +
    '  stud.mod_t, ' +
    '  stud.dom_t, ' +
    '  stud.data_pr, ' +
    '  gruppa.naim_grup, ' +
    '  stud.st_email ' +
    'FROM stud ' +
    'INNER JOIN gruppa ON gruppa.grup_id = stud.grup_id ' +
    'INNER JOIN spec ON spec.spec_id = gruppa.spec_id ' +
    'WHERE 1=1 ' +
    '  AND stud.data_ot IS NULL ' +
    '  AND is_akadem = 0 and '+ ' '+' '+
     'stud.adr like'+
   QuotedStr(Concat(Stud_fnd_adr_edit.Text,#37));
   dm.StudQuery.close;
   dm.StudQuery.Open;
except on E: Exception do
  begin
  ShowMessage('wrong situation'+' '+E.Message);
  end;
  end;
end;

procedure TFrm_stud.s(Sender: TObject; var Key: Char);
begin
try

   dm.studQuery.SQL.Text:='select'+' '+
       '  stud.passp_fam + '' '' + stud.passp_naim + ISNULL('' '' + stud.passp_otch, '''') AS fio, ' +
    '  stud.stud_id, ' +
    '  stud.b_data, ' +
    '  CASE stud.pol WHEN 1 THEN ''Мужской'' ELSE ''Женский'' END AS sex, ' +
    '  stud.civ, ' +
    '  stud.region, ' +
    '  stud.gorod, ' +
    '  stud.adr, ' +
    '  CASE stud.mesto_jit WHEN 1 THEN ''Съем'' ELSE ''Общежитие'' END AS to_live, ' +
    '  stud.mod_t, ' +
    '  stud.dom_t, ' +
    '  stud.data_pr, ' +
    '  gruppa.naim_grup, ' +
    '  stud.st_email ' +
    'FROM stud ' +
    'INNER JOIN gruppa ON gruppa.grup_id = stud.grup_id ' +
    'INNER JOIN spec ON spec.spec_id = gruppa.spec_id ' +
    'WHERE 1=1 ' +
    '  AND stud.data_ot IS NULL ' +
    '  AND is_akadem = 0 '+ ' '+' '+
      'and stud.adr like'+
   QuotedStr(Concat(Stud_fnd_adr_edit.Text,#37));
   dm.StudQuery.close;
   dm.StudQuery.Open;
except on E: Exception do
  begin
  ShowMessage('wrong situation'+' '+E.Message);
  end;
  end;


end;


procedure TFrm_stud.Stud_gr_groupradioClick(Sender: TObject);
begin
if stud_gr_groupradio.Checked=true then
  begin
    try
     with dm.StudQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
      'select '+
       '  stud.passp_fam + '' '' + stud.passp_naim + ISNULL('' '' + stud.passp_otch, '''') AS fio, ' +
    '  stud.stud_id, ' +
    '  stud.b_data, ' +
    '  CASE stud.pol WHEN 1 THEN ''Мужской'' ELSE ''Женский'' END AS sex, ' +
    '  stud.civ, ' +
    '  stud.region, ' +
    '  stud.gorod, ' +
    '  stud.adr, ' +
    '  CASE stud.mesto_jit WHEN 1 THEN ''Съем'' ELSE ''Общежитие'' END AS to_live, ' +
    '  stud.mod_t, ' +
    '  stud.dom_t, ' +
    '  stud.data_pr, ' +
    '  gruppa.naim_grup, ' +
    '  stud.st_email ' +
    'FROM stud ' +
    'INNER JOIN gruppa ON gruppa.grup_id = stud.grup_id ' +
    'INNER JOIN spec ON spec.spec_id = gruppa.spec_id ' +
    'WHERE 1=1 ' +
    '  AND stud.data_ot IS NULL ' +
    '  AND is_akadem = 0 '+ ' '+
      'order by gruppa.naim_grup desc';

      Open;
     end;
    except on E: EADOError do
    begin
      ShowMessage('ошибка'+' '+E.Message);
    end;
    end;
  end;

end;

end.
