unit Un_prikaz;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, StdCtrls, Grids, DBGrids, ExtCtrls, ADODB,DB, DBCtrls;

type
  TFrm_prikaz = class(TForm)
    PrikazPage: TPageControl;
    SelTab: TTabSheet;
    InsTab: TTabSheet;
    UpdTab: TTabSheet;
    delTab: TTabSheet;
    PrikazgroupBox: TGroupBox;
    PrikazbtnBox: TGroupBox;
    PrikazDataBox: TGroupBox;
    PrikazSelGrid: TDBGrid;
    PrikazSelBtn: TButton;
    PrikazCondBox: TGroupBox;
    Prikaz_condEdit: TLabeledEdit;
    Prikaz_fnd_edit: TLabeledEdit;
    prikaz_nom_groupradio: TRadioButton;
    PrikazResetRadio: TRadioButton;
    Grupp_inpBox: TGroupBox;
    Grupp_naim_g_inp: TLabeledEdit;
    Grupp_ins_btn_Box: TGroupBox;
    Grupp_insBtn: TButton;
    Grupp_DataInsBox: TGroupBox;
    Grupp_upd_inp_Box: TGroupBox;
    Grupplbl: TStaticText;
    GruppUpdDBL: TDBLookupComboBox;
    Grupp_upd_btn_Box: TGroupBox;
    Grupp_upd_Btn: TButton;
    Grupp_upd_dataBox: TGroupBox;
    delgrdatacBox: TGroupBox;
    delgrlbl: TStaticText;
    delgrDBL: TDBLookupComboBox;
    dlgrbtnBox: TGroupBox;
    delgrBtn: TButton;
    degrdataBox: TGroupBox;
    type_pr_groupradio: TRadioButton;
    Grupp_insGrd: TDBGrid;
    GradeUpDown: TUpDown;
    GradeEdit: TEdit;
    gradelbl: TStaticText;
    SpecGrinsDBL: TDBLookupComboBox;
    SpecGinsLbl: TLabel;
    GruppupdDataGrd: TDBGrid;
    UpDown_upd_grade: TUpDown;
    gr_upd_grader: TEdit;
    grupdLbl: TLabel;
    delgrgrid: TDBGrid;
    procedure FormCreate(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure PrikazSelBtnClick(Sender: TObject);
    procedure PrikazResetRadioClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_prikaz: TFrm_prikaz;

implementation

uses Un_dm, Un_main, Un_func;

{$R *.dfm}

procedure TFrm_prikaz.FormActivate(Sender: TObject);
begin
dm.StudQuery.Open;
dm.PrikazQuery.Open;
end;

procedure TFrm_prikaz.FormClose(Sender: TObject; var Action: TCloseAction);
var
  q:Integer;
begin
 SaveFormState(Self);
 with dm do
 begin
    for q := 0 to ComponentCount - 1 do
 begin
    if(Components[q] is TADOQuery)  then
   begin
      (Components[q] as TADOQuery).Close;
 end;
 end;
 end;

end;

procedure TFrm_prikaz.FormCreate(Sender: TObject);
begin
 UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
 LoadFormState(Self);
end;

procedure TFrm_prikaz.PrikazResetRadioClick(Sender: TObject);
var i,j:Integer;
begin
if prikazResetRadio.Checked=True then
begin
  with Frm_prikaz do
    for I := 0 to ComponentCount - 1 do
     begin
       if (Components[i] is TLabeledEdit)  then
        begin
          (Components[i] as TLabeledEdit).Clear;
        end;
     end;
     with dm.PrikazQuery do
     begin
     Close;
     sql.Clear;
     SQL.Text:=
     'select '+
      'prikaz.pr_id,'+' '+
      'prikaz.pr_nom,'+' '+
       'prikaz.date_pr,'+
         'prikaz.tip_pr,'+''+
 '  stud.passp_fam + '' '' + stud.passp_naim + ISNULL('' '' + stud.passp_otch, '''') AS fio, '+
  'from prikaz'+''+
  'inner join stud on stud.stud_id=prikaz.stud_id'+' '+
  'where 1=1'+''+
  'and stud.data_ot is null';
ShowMessage(dm.PrikazQuery.sql.Text);


     Open;
     end;
    with Frm_prikaz do
    for j := 0 to ComponentCount - 1 do
    begin
      if(Components[j] is TRadioButton)  then
      begin
        (Components[j] as TRadioButton).Checked:=False;
      end;
    end;
end;
end;

procedure TFrm_prikaz.PrikazSelBtnClick(Sender: TObject);
 var
  sel_prikaz:TADOStoredProc;
begin
  sel_prikaz := nil;
  try
    sel_prikaz := TADOStoredProc.Create(nil);
    try
      with sel_prikaz do
      begin
        Connection := DM.Connection;
        if not Connection.Connected then
          raise Exception.Create('Cоединение с базой не установлено');
        ProcedureName := 'sel_prikaz';
        Parameters.Clear;
        Parameters.CreateParameter('pr_nom',
        ftString,
        pdInput, 1000,
        prikaz_condEdit.Text
        );
        Open;
        DM.PrikazQuery.Close;
        DM.PrikazQuery.Recordset := sel_prikaz.Recordset;
      end;
    except
      on E: EADOError do
        ShowMessage('Ошибка: ' + E.Message);
      on E: Exception do
        ShowMessage('Ошибка: ' + E.Message);
    end;
  finally
    FreeAndNil(sel_prikaz);
  end;
end;

end.
