unit Un_user;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs,DB,ADODB, ComCtrls, StdCtrls, ExtCtrls, Grids, DBGrids;

type
  TFrm_user = class(TForm)
    userPC: TPageControl;
    selTab: TTabSheet;
    TabSheet2: TTabSheet;
    TabSheet3: TTabSheet;
    delTab: TTabSheet;
    User_inp_boxBox: TGroupBox;
    user_data_box: TGroupBox;
    User_grouper: TGroupBox;
    User_btn_Box: TGroupBox;
    UserCondEdit: TLabeledEdit;
    USERFNDEdit: TLabeledEdit;
    User_sel_Btn: TButton;
    sel_user_GRD: TDBGrid;
    PassRadio: TRadioButton;
    logRadio: TRadioButton;
    resteRadio: TRadioButton;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure User_sel_BtnClick(Sender: TObject);
    procedure USERFNDEditKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_user: TFrm_user;

implementation

uses Un_dm, Un_func;

{$R *.dfm}

procedure TFrm_user.FormActivate(Sender: TObject);
begin
  dm.userQuery.Open;
  AdjustDBGridColumnWidths('Frm_user',6000, 10)
end;

procedure TFrm_user.FormClose(Sender: TObject; var Action: TCloseAction);
begin
   SaveFormState(Self);
   CloseAllQueriesOnDataModule('dm');
   Action := caFree;
end;

procedure TFrm_user.FormCreate(Sender: TObject);
begin
  Frm_user.KeyPreview:=true;
  Frm_user.ShowHint:=true;
  UniformizeButtonsSize(Self,  273, 25);
  UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
  LoadFormState(Self);
end;

procedure TFrm_user.USERFNDEditKeyPress(Sender: TObject; var Key: Char);
begin
    try
   dm.userQuery.SQL.Text:=
   'select'+' '+
   'usver.userid,'+' '+
   'usver.user_name,'+' '+
   'usver.user_pass'+' '+
    'from usver'+' '+
    'where 1=1'+
   'and usver.user_pass like'+
   QuotedStr(Concat(userfndedit.Text,#37));
   dm.userQuery.close;
   dm.userQuery.Open;
except on E: Exception do
  begin
  ShowMessage('Ошибка'+' '+E.Message);
  end;
  end;
end;

procedure TFrm_user.User_sel_BtnClick(Sender: TObject);
begin
   try
    if not DM.Connection.Connected then
      raise Exception.Create('Соединение с базой не установелено');
    with DM.sel_user_by_login do
    begin
      Close;
      Parameters.ParamByName('@user_name').Value :=usercondedit.Text;
      Open;
       DM.userQuery.Recordset:=dm.sel_user_by_login.Recordset;
    end;
  except
    on E: EDatabaseError do
      ShowMessage('Ошибка: ' + E.Message);
    on E: Exception do
      ShowMessage('Ошибка: ' + E.Message);
  end;
end;

end.
