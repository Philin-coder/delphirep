unit Un_main;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, Menus;

type
  TFrm_main = class(TForm)
    ItemMenu: TMainMenu;
    user_item: TMenuItem;
    procedure FormActivate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure user_itemClick(Sender: TObject);
  private
procedure CreateAndShowChildForm;
  public
    { Public declarations }
  end;

var
  Frm_main: TFrm_main;

implementation

uses Un_func, Un_dm, Un_user;
const
  FileName = 'connection_string.txt';


{$R *.dfm}
procedure TFrm_main.CreateAndShowChildForm;
var
  ChildForm: TForm;
begin
  ChildForm := TForm.Create(Self);
  try
    ChildForm.FormStyle := fsMDIChild;
    ChildForm.Caption := 'Дочерняя форма';
    ChildForm.Show;


    AdjustChildFormSize(ChildForm, Self);
  except
    ChildForm.Free;
    raise;
  end;
end;

procedure TFrm_main.FormActivate(Sender: TObject);
begin
  SaveConnectionStringToFile(FileName, dm.connection.ConnectionString);
end;

procedure TFrm_main.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  SaveFormState(Self);
end;

procedure TFrm_main.FormCreate(Sender: TObject);
begin
  SetFormPropertiesIfNeeded;
  LoadFormState(Self);
end;

procedure TFrm_main.user_itemClick(Sender: TObject);
begin
  try
  UpdateFormProperties('Frm_user', 'Форма работы с данными пользователя',
    clBtnFace, 1024, 768);
  Frm_user.FormStyle := fsMDIChild;
  Frm_user.Show;
   AdjustChildFormSize(Frm_user, Self);
except
  on E: Exception do
  begin
    ShowMessage('Ошибка: ' + E.Message);
    Frm_user.Release;
  end;
end;
end;

end.
