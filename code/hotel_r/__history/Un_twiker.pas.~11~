unit Un_twiker;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs,adodb,db;

type
  Tfrm_twiker = class(TForm)
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormActivate(Sender: TObject);
  private
    FNumber: Integer;
    procedure SetNumber(const value:Integer);
  public
    property Number:Integer read Fnumber  write setNumber;
  end;

var
  frm_twiker: Tfrm_twiker;
  init_str:string;

implementation

uses Un_dm, Un_fadmin, Un_func;

{$R *.dfm}
procedure Tfrm_twiker.SetNumber(const value:Integer);
begin
    FNumber := value;
end;

procedure Tfrm_twiker.FormActivate(Sender: TObject);
  var
   ResultString: string;
begin
    if not dm.sel_adm_by_id_q.Active then
  begin
    try
      with dm.sel_adm_by_id do
      begin
        if not Connection.Connected then
          raise Exception.Create('Соединение с базой не установлено');
        Close;
        Parameters.ParamByName('@id').Value := FNumber;
        Open;
      end;

      DM.sel_adm_by_id_q.Recordset := dm.sel_adm_by_id.Recordset;
      if not DM.sel_adm_by_id_q.IsEmpty then
      begin
        ResultString :=
            VarToStr(dm.sel_adm_by_id_q.FieldByName('fio_admin').Value);
        init_str:= ResultString;
        ShowMessage(init_str);
      end;
    except
      on E: EADOError do
        ShowMessage('Ошибка' + E.Message);
      on E: Exception do
        ShowMessage('Ошибка: ' + E.Message);
    end;
  end;


end;

procedure Tfrm_twiker.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  SaveFormState(Self);
  CloseAllQueriesOnDataModule('dm');
    init_str:='';
end;

procedure Tfrm_twiker.FormCreate(Sender: TObject);
begin
  frm_twiker.KeyPreview:=true;
  frm_twiker.ShowHint:=true;
  UniformizeButtonsSize(Self,  273, 25);
  UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
  LoadFormState(Self);
  init_str:='';
end;

end.
