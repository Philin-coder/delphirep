unit Un_nom;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, Grids, DBGrids, StdCtrls, ExtCtrls,adodb,db, DBCtrls,jpeg;

type
  TFrm_nom = class(TForm)
    FulnomPC: TPageControl;
    seLTab: TTabSheet;
    insTab: TTabSheet;
    updTab: TTabSheet;
    delTab: TTabSheet;
    sel_nomcondBox: TGroupBox;
    m_nom_grupper: TGroupBox;
    selnommbtnBox: TGroupBox;
    sel_nom_data_box: TGroupBox;
    nomselBtn: TButton;
    selnomselgrd: TDBGrid;
    nom_kind_cond_edit: TLabeledEdit;
    sel_nom_fnd_Edit: TLabeledEdit;
    nom_Radiocos_adaygrupper: TRadioButton;
    nom_Radiokindgrupper: TRadioButton;
    nom_reset_radio: TRadioButton;
    ins_tn_dataBox: TGroupBox;
    ins_usl_inpBox: TGroupBox;
    ins_usl_btn_Box: TGroupBox;
    ins_uslBtn: TButton;
    usl_naim_inp: TLabeledEdit;
    uslliveQuercB: TCheckBox;
    usllqPanel: TPanel;
    usllqsvBtn: TButton;
    upd_usl_inp_Box: TGroupBox;
    upd_usl_btn_Box: TGroupBox;
    upd_usl_data_box: TGroupBox;
    upd_uls_btn: TButton;
    upd_usl_lbl: TStaticText;
    upd_usl_u_dbl: TDBLookupComboBox;
    del_usl_inpBox: TGroupBox;
    del_usl_dataBox: TGroupBox;
    del_usl_btn_Box: TGroupBox;
    del_usl_d_btn: TButton;
    del_dbl_usl_lbl: TStaticText;
    del_dbl_usl_dbl: TDBLookupComboBox;
    usl_ed_ism_inp: TLabeledEdit;
    ins_tn_data_Box: TGroupBox;
    upd_usl_naim_inp: TLabeledEdit;
    ins_usl_grd: TDBGrid;
    usl_cost_inp: TLabeledEdit;
    uslGrd: TDBGrid;
    Del_usl_grd: TDBGrid;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormActivate(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure selnomselgrdDblClick(Sender: TObject);
    procedure nomselBtnClick(Sender: TObject);
    procedure sel_nom_fnd_EditKeyPress(Sender: TObject; var Key: Char);
    procedure nom_Radiocos_adaygrupperClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_nom: TFrm_nom;


implementation

uses Un_dm, Un_func;

{$R *.dfm}

procedure TFrm_nom.FormActivate(Sender: TObject);
begin
  dm.nom_query.Open;
  dm.type_nQuery.Open;
end;

procedure TFrm_nom.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  SaveFormState(Self);
  CloseAllQueriesOnDataModule('dm');
end;

procedure TFrm_nom.FormCreate(Sender: TObject);
begin
  Frm_nom.KeyPreview:=true;
  Frm_nom.ShowHint:=true;
  UniformizeButtonsSize(Self,  273, 25);
  UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
  LoadFormState(Self);
end;

procedure TFrm_nom.nomselBtnClick(Sender: TObject);
begin
try
    if not DM.Connection.Connected then
      raise Exception.Create('Соединение с базой не установлено');
    with DM.sel_nom_by_kind do
    begin
      Close;
      Parameters.ParamByName('@nomer_kind').Value :=nom_kind_cond_edit.Text;
      Open;
       DM.nom_query.Recordset:=dm.sel_nom_by_kind.Recordset;
    end;
  except
    on E: EDatabaseError do
      ShowMessage('Ошибка: ' + E.Message);
    on E: Exception do
      ShowMessage('Ошибка: ' + E.Message);
  end;
end;

procedure TFrm_nom.nom_Radiocos_adaygrupperClick(Sender: TObject);
begin
  if  nom_Radiocos_adaygrupper.Checked=true then
  begin
    try
     with dm.type_nQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
      'select'+' '+
   'nomer.id_type_nomer,'+' '+
    'nomer.nomer_kind,'+' '+
    'nomer.nomer_cost_day,'+' '+
    'type_nomer.type_image'+' '+
    'from nomer'+' '+
    'inner join  type_nomer on type_nomer.id_type_nomer=nomer.id_type_nomer'+' '+
    'where 1=1'+' '+
    'order nomer_cost_day asc';
      Open;
     end;
    except on E: EADOError do
    begin
      ShowMessage('Ошибка'+' '+E.Message);
    end;
    end;
  end;
end;

procedure TFrm_nom.selnomselgrdDblClick(Sender: TObject);
begin
  ShowImageFromDatabase(
  dm.Connection,
  'type_nomer',
  'type_image',
  'id_type_nomer',
   selnomselgrd.DataSource.DataSet.FieldByName('id_type_nomer').AsInteger
  );
end;

procedure TFrm_nom.sel_nom_fnd_EditKeyPress(Sender: TObject; var Key: Char);
begin
  try
   dm.nom_query.SQL.Text:=
   'select'+' '+
   'nomer.id_type_nomer,'+' '+
    'nomer.nomer_kind,'+' '+
    'nomer.nomer_cost_day,'+' '+
    'type_nomer.type_image'+' '+
    'from nomer'+' '+
    'inner join  type_nomer on type_nomer.id_type_nomer=nomer.id_type_nomer'+' '+
    'where 1=1'+' '+
   'and nomer.nomer_kind like'+
   QuotedStr(Concat(sel_nom_fnd_edit.Text,#37));
   dm.nom_Query.close;
   dm.nom_Query.Open;
except on E: Exception do
  begin
  ShowMessage('Ошибка'+' '+E.Message);
  end;
  end;
end;

end.
