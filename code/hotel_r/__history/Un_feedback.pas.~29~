unit Un_feedback;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, Grids, DBGrids, StdCtrls, ExtCtrls,adodb,db, DBCtrls,jpeg;

type
  TFrm_feedback = class(TForm)
    FfeedbackPC: TPageControl;
    seLTab: TTabSheet;
    insTab: TTabSheet;
    updTab: TTabSheet;
    delTab: TTabSheet;
    sel_fbcondBox: TGroupBox;
    m_fb_grupper: TGroupBox;
    selfbbtnBox: TGroupBox;
    sel_fb_data_box: TGroupBox;
    fbselBtn: TButton;
    selfbselgrd: TDBGrid;
    fb_fio_marker_cond_edit: TLabeledEdit;
    sell_fb_text_fnd_Edit: TLabeledEdit;
    fb_Radionaim_grupper: TRadioButton;
    fb_Radio_mark_grupper: TRadioButton;
    fb_reset_radio: TRadioButton;
    ins_tn_dataBox: TGroupBox;
    ins_usl_inpBox: TGroupBox;
    ins_usl_btn_Box: TGroupBox;
    ins_uslBtn: TButton;
    usl_naim_inp: TLabeledEdit;
    uslliveQuercB: TCheckBox;
    usllqPanel: TPanel;
    usllqsvBtn: TButton;
    upd_usl_inp_Box: TGroupBox;
    upd_usl_btn_Box: TGroupBox;
    upd_usl_data_box: TGroupBox;
    upd_uls_btn: TButton;
    upd_usl_lbl: TStaticText;
    upd_usl_u_dbl: TDBLookupComboBox;
    del_usl_inpBox: TGroupBox;
    del_usl_dataBox: TGroupBox;
    del_usl_btn_Box: TGroupBox;
    del_usl_d_btn: TButton;
    del_dbl_usl_lbl: TStaticText;
    del_dbl_usl_dbl: TDBLookupComboBox;
    usl_ed_ism_inp: TLabeledEdit;
    ins_tn_data_Box: TGroupBox;
    upd_usl_naim_inp: TLabeledEdit;
    usl_cost_inp: TLabeledEdit;
    DBGrid1: TDBGrid;
    DBGrid2: TDBGrid;
    DBGrid3: TDBGrid;
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormActivate(Sender: TObject);
    procedure fbselBtnClick(Sender: TObject);
    procedure sell_fb_text_fnd_EditKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_feedback: TFrm_feedback;


implementation

uses Un_dm, Un_func;

{$R *.dfm}

procedure TFrm_feedback.fbselBtnClick(Sender: TObject);
begin
try
    if not DM.Connection.Connected then
      raise Exception.Create('Соединение с базой не установлено');
    with DM.sel_feedback_by_fio do
    begin
      Close;
      Parameters.ParamByName('@guest_fio').Value :=fb_fio_marker_cond_edit.Text;
      Open;
       DM.fbQuery.Recordset:=dm.sel_feedback_by_fio.Recordset;
    end;
  except
    on E: EDatabaseError do
      ShowMessage('Ощибка: ' + E.Message);
    on E: Exception do
      ShowMessage('Ощибка: ' + E.Message);
  end;

end;

procedure TFrm_feedback.FormActivate(Sender: TObject);
begin
  dm.dogQuery.Open;
  dm.fbQuery.Open;
  AdjustDBGridColumnWidths('Frm_feedback',6000, 10);
end;

procedure TFrm_feedback.FormClose(Sender: TObject; var Action: TCloseAction);
begin
   SaveFormState(Self);
   CloseAllQueriesOnDataModule('dm');
end;

procedure TFrm_feedback.FormCreate(Sender: TObject);
begin
  Frm_feedback.KeyPreview:=true;
  Frm_feedback.ShowHint:=true;
  UniformizeButtonsSize(Self,  273, 25);
  UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
  LoadFormState(Self)
end;

procedure TFrm_feedback.sell_fb_text_fnd_EditKeyPress(Sender: TObject;
  var Key: Char);
begin
  try
   dm.fbQuery.SQL.Text:=
   'select'+' '+
    'feedback.feedback_id,'+' '+
    'dogovor.guest_fio,'+' '+
    'feedback.feedback_text,'+' '+
   'case '+
   'when  feedback.feeadbackmarck=1 then ''Очень плохо'' '+
   'when  feedback.feeadbackmarck=2 then ''Плохо'' ' +
   'when  feedback.feeadbackmarck=3 then ''Удовлетворительно'' '+
   'when  feedback.feeadbackmarck=4 then ''Хорошо'' '+
   'else ''Отлично'' '+
   'end as fb'+' '+
    'from feedback'+' '+
    'inner join dogovor on dogovor.dog_id=feedback.dog_id'+' '+
    'where 1=1'+
   'and dogovor.guest_fio like'+
   QuotedStr(Concat(sell_fb_text_fnd_Edit.Text,#37));
   dm.fbQuery.close;
   dm.fbQuery.Open;
except on E: Exception do
  begin
  ShowMessage('Ошибка'+' '+E.Message);
  end;
  end;
end;

end.
