unit Un_dog;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, Grids, DBGrids, StdCtrls, ExtCtrls,adodb,db, DBCtrls,jpeg;

type
  TFrm_dog = class(TForm)
    FdogPC: TPageControl;
    seLTab: TTabSheet;
    insTab: TTabSheet;
    updTab: TTabSheet;
    delTab: TTabSheet;
    sel_dog_condBox: TGroupBox;
    m_dog_grupper: TGroupBox;
    sel_dog_btnBox: TGroupBox;
    sel_dog_data_box: TGroupBox;
    dogselBtn: TButton;
    dog_fio_cond_edit: TLabeledEdit;
    sel_dog_reg_fnd_Edit: TLabeledEdit;
    dog_Radiofiogrupper: TRadioButton;
    dog_Radiodate_d_grupper: TRadioButton;
    dog_reset_radio: TRadioButton;
    ins_tn_dataBox: TGroupBox;
    ins_usl_inpBox: TGroupBox;
    ins_usl_btn_Box: TGroupBox;
    ins_uslBtn: TButton;
    usl_naim_inp: TLabeledEdit;
    uslliveQuercB: TCheckBox;
    usllqPanel: TPanel;
    usllqsvBtn: TButton;
    upd_usl_inp_Box: TGroupBox;
    upd_usl_btn_Box: TGroupBox;
    upd_usl_data_box: TGroupBox;
    upd_uls_btn: TButton;
    upd_usl_lbl: TStaticText;
    upd_usl_u_dbl: TDBLookupComboBox;
    del_usl_inpBox: TGroupBox;
    del_usl_dataBox: TGroupBox;
    del_usl_btn_Box: TGroupBox;
    del_usl_d_btn: TButton;
    del_dbl_usl_lbl: TStaticText;
    del_dbl_usl_dbl: TDBLookupComboBox;
    usl_ed_ism_inp: TLabeledEdit;
    ins_tn_data_Box: TGroupBox;
    upd_usl_naim_inp: TLabeledEdit;
    ins_usl_grd: TDBGrid;
    usl_cost_inp: TLabeledEdit;
    uslGrd: TDBGrid;
    Del_usl_grd: TDBGrid;
    sel_dogGrd: TDBGrid;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormActivate(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure dogselBtnClick(Sender: TObject);
    procedure sel_dog_reg_fnd_EditKeyPress(Sender: TObject; var Key: Char);
    procedure dog_RadiofiogrupperClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_dog: TFrm_dog;


implementation

uses Un_dm, Un_func;

{$R *.dfm}

procedure TFrm_dog.dogselBtnClick(Sender: TObject);
begin
try
    if not DM.Connection.Connected then
      raise Exception.Create('Cоединение с базой не установлено');
    with DM.sel_dog_by_fio do
    begin
      Close;
      Parameters.ParamByName('@guest_fio').Value := dog_fio_cond_edit.Text;
      Open;
       DM.dogQuery.Recordset:=dm.sel_dog_by_fio.Recordset;
    end;
  except
    on E: EDatabaseError do
      ShowMessage('Ошибка: ' + E.Message);
    on E: Exception do
      ShowMessage('Ошибка: ' + E.Message);
  end;
end;

procedure TFrm_dog.dog_RadiofiogrupperClick(Sender: TObject);
begin
if  dog_Radiofiogrupper.Checked=true then
  begin
    try
     with dm.dogQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
      dogovor.dog_id,'+' '+
    'dogovor.guest_fio,'+' '+
    'dogovor.data_b,'+' '+
    'dogovor.pass_n,'+' '+
    'dogovor.pass_seria,'+' '+
    'dogovor.kem_vid,'+' '+
    'dogovor.mesto_r,'+' '+
    'dogovor.data_reg,'+' '+
    'dogovor.pol,'+' '+
    'dogovor.perpose,'+' '+
    'nomer.nomer_kind,'+' '+
    'dogovor.date_dog,'+' '+
    'dogovor.sr_dog,'+' '+
    'm_admin.fio_admin'+' '+
    'from dogovor'+' '+
    'inner join nomer on  dogovor.nomer_id=nomer.nomer_id'+' '+
    'inner join m_admin on dogovor.id_admin=m_admin.id_admin'+' '+
    'where 1=1'+''+
    'order by m_admin.fio_admin asc';
      Open;
     end;
    except on E: EADOError do
    begin
      ShowMessage('Ошибка'+' '+E.Message);
    end;
    end;
  end;
end;

procedure TFrm_dog.FormActivate(Sender: TObject);
begin
  DM.dogQuery.Open;
  dm.nom_query.Open;
  dm.admQuery.Open;
end;

procedure TFrm_dog.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  SaveFormState(Self);
  CloseAllQueriesOnDataModule('dm');
end;

procedure TFrm_dog.FormCreate(Sender: TObject);
begin
  Frm_dog.KeyPreview:=true;
  Frm_dog.ShowHint:=true;
  UniformizeButtonsSize(Self,  273, 25);
  UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
  LoadFormState(Self);
end;

procedure TFrm_dog.sel_dog_reg_fnd_EditKeyPress(Sender: TObject; var Key: Char);
begin
  try
   dm.dogQuery.SQL.Text:=
   'select'+' '+
   'dogovor.dog_id,'+' '+
    'dogovor.guest_fio,'+' '+
    'dogovor.data_b,'+' '+
    'dogovor.pass_n,'+' '+
    'dogovor.pass_seria,'+' '+
    'dogovor.kem_vid,'+' '+
    'dogovor.mesto_r,'+' '+
    'dogovor.data_reg,'+' '+
    'dogovor.pol,'+' '+
    'dogovor.perpose,'+' '+
    'nomer.nomer_kind,'+' '+
    'dogovor.date_dog,'+' '+
    'dogovor.sr_dog,'+' '+
    'm_admin.fio_admin'+' '+
    'from dogovor'+' '+
    'inner join nomer on  dogovor.nomer_id=nomer.nomer_id'+' '+
    'inner join m_admin on dogovor.id_admin=m_admin.id_admin'+' '+
    'where 1=1'+' '+
    'and dogovor.mesto_r like'+
   QuotedStr(Concat(sel_dog_reg_fnd_edit.Text,#37));
   dm.dogQuery.close;
   dm.dogQuery.Open;
except on E: Exception do
  begin
  ShowMessage('Ошибка'+' '+E.Message);
  end;
  end;
end;

end.
