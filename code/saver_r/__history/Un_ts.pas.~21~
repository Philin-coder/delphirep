unit Un_ts;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ComCtrls, Grids, DBGrids, ExtCtrls, ToolWin,zlib, ImgList,
  jpeg, DBCtrls,adodb,db;
type
  TFrm_ts = class(TForm)
    tsPC: TPageControl;
    selTab: TTabSheet;
    ts_inp_Box: TGroupBox;
    ts_Data_Box: TGroupBox;
    ts_grouper_Box: TGroupBox;
    ts_btn_Box: TGroupBox;
    ts_sel_Btn: TButton;
    insTab: TTabSheet;
    UpdTab: TTabSheet;
    delTab: TTabSheet;
    ts_cond_Edit: TLabeledEdit;
    ts_fnd_Edit: TLabeledEdit;
    ts_sel_Grid: TDBGrid;
    ts_theme_radio: TRadioButton;
    ts_desc_radio: TRadioButton;
    ts_kind_radio: TRadioButton;
    ts_reset_radio: TRadioButton;
    ins_lang_inp_Box: TGroupBox;
    ins_lang_data_Box: TGroupBox;
    ins_lang_btn_Box: TGroupBox;
    ins_lang_grid: TDBGrid;
    ins_lang_btn: TButton;
    lang_desc_inp: TLabeledEdit;
    lang_naim_inp: TLabeledEdit;
    Lang_lbl: TStaticText;
    lang_kind_combo: TComboBox;
    upd_data_box: TGroupBox;
    upd_inp_Box: TGroupBox;
    upd_btn_box: TGroupBox;
    upd_btn: TButton;
    upd_lang_grd: TDBGrid;
    Upd_lang_desc_inp: TLabeledEdit;
    upd_lang_desc_lbl: TStaticText;
    upd_lang_desc_dbl: TDBLookupComboBox;
    lang_del_data_Box: TGroupBox;
    lang_del_btn_Box: TGroupBox;
    lang_del_inp_Box: TGroupBox;
    lang_del_grid: TDBGrid;
    lang_del_btn: TButton;
    del_lang_lbl: TStaticText;
    del_lang_dbl: TDBLookupComboBox;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure ts_sel_BtnClick(Sender: TObject);
    procedure ts_fnd_EditKeyPress(Sender: TObject; var Key: Char);
    procedure ts_theme_radioClick(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_ts: TFrm_ts;


implementation

uses Un_dm, Un_func;

{$R *.dfm}

procedure TFrm_ts.FormActivate(Sender: TObject);
begin
  dm.langQuery.Open;
  dm.TsQuery.Open;
  AdjustDBGridColumnWidths('Frm_ts',6000, 10);
end;

procedure TFrm_ts.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  SaveFormState(Self);
  CloseAllQueriesOnDataModule('dm');
end;

procedure TFrm_ts.FormCreate(Sender: TObject);
begin
  UpdateFormShowHint('Frm_ts');
  UniformizeButtonsSize(Self,  273, 25);
  UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
  UniformizeComponentAnchors(Self);
  LoadFormState(Self);
end;
procedure TFrm_ts.ts_fnd_EditKeyPress(Sender: TObject; var Key: Char);
begin
    try
   dm.TsQuery.SQL.Text:=
   'select'+' '+
  'to_save.to_save_id,'+' '+
  'to_save.to_save_desc,'+' '+
  'to_save.to_save_theme,'+' '+
  'to_save.to_save_create_date,'+' '+
  'to_save.to_save_file,'+' '+
  'case when to_save.work_kind=0 then ''Курсовая'' else ''Дипломная'' end  as work_type,'+' '+
  'lang.lang_naim'+' '+
  'from to_save'+' '+
  'inner join lang on lang.lang_id=to_save.lang_id'+' '+
  'where 1=1'+' '+
  'and lang.lang_naim like'+' '+
   QuotedStr(Concat(ts_fnd_Edit.Text,#37));
   dm.tsQuery.close;
   dm.tsQuery.Open;
except
   on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка    Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка : ' + E.Message);
    HandleException(E);
    raise;
end;
end;
end;

procedure TFrm_ts.ts_sel_BtnClick(Sender: TObject);
begin
  try
    if not DM.Connection.Connected then
      raise EDatabaseError.Create('Соединение с базой не установлено ',4001);
    with DM.sel_work_by_theme do
    begin
      Close;
      Parameters.ParamByName('@to_save_theme').Value :=ts_cond_Edit.Text;
      Open;
       DM.TsQuery.Recordset:=dm.sel_work_by_theme.Recordset;
    end;
  except
  on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка   Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E);
    Raise;
  end;
end;
end;

procedure TFrm_ts.ts_theme_radioClick(Sender: TObject);
begin
   if  ts_theme_radio.Checked=true then
  begin
    try
     with dm.tsQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
          'select'+' '+
  'to_save.to_save_id,'+' '+
  'to_save.to_save_desc,'+' '+
  'to_save.to_save_theme,'+' '+
  'to_save.to_save_create_date,'+' '+
  'to_save.to_save_file,'+' '+
  'case when to_save.work_kind=0 then ''Курсовая'' else ''Дипломная'' end  as work_type,'+' '+
  'lang.lang_naim'+' '+
  'from to_save'+' '+
  'inner join lang on lang.lang_id=to_save.lang_id'+' '+
  'where 1=1'+' '+
    'order by to_save.to_save_theme asc';
      Open;
     end;
    except
        on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка  Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E);
    Raise;
  end;
end;
end;
end;

end.


