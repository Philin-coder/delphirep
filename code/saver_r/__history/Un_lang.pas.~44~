unit Un_lang;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ComCtrls, Grids, DBGrids, ExtCtrls, ToolWin,zlib, ImgList,
  jpeg;
type
  TFrm_lang = class(TForm)
    langPC: TPageControl;
    selTab: TTabSheet;
    lang_inp_Box: TGroupBox;
    lang_Data_Box: TGroupBox;
    lang_grouper_Box: TGroupBox;
    lang_btn_Box: TGroupBox;
    lang_sel_Btn: TButton;
    TabSheet1: TTabSheet;
    TabSheet2: TTabSheet;
    TabSheet3: TTabSheet;
    Lang_cond_Edit: TLabeledEdit;
    Lang_fnd_Edit: TLabeledEdit;
    Lang_sel_Grid: TDBGrid;
    Lang_naim_radio: TRadioButton;
    Lang_desc_radio: TRadioButton;
    Lang_kind_radio: TRadioButton;
    Lang_reset_radio: TRadioButton;
    lang_TB: TToolBar;
    lang_arch_TlB: TToolButton;
    SSaarvhBtn: TToolButton;
    SSAunarchlBtn: TToolButton;
    bin_btn: TToolButton;
    icon_ImageList: TImageList;
    ToolButton1: TToolButton;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure lang_arch_TlBClick(Sender: TObject);
    procedure SSaarvhBtnClick(Sender: TObject);
    procedure SSAunarchlBtnClick(Sender: TObject);
    procedure lang_sel_BtnClick(Sender: TObject);
    procedure Lang_fnd_EditKeyPress(Sender: TObject; var Key: Char);
    procedure Lang_naim_radioClick(Sender: TObject);
    procedure Lang_desc_radioClick(Sender: TObject);
    procedure Lang_kind_radioClick(Sender: TObject);
    procedure Lang_reset_radioClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_lang: TFrm_lang;

implementation

uses Un_dm, Un_func;

{$R *.dfm}

procedure TFrm_lang.FormActivate(Sender: TObject);
begin
  dm.langQuery.Open;
  AdjustDBGridColumnWidths('Frm_lang',6000, 10);
end;

procedure TFrm_lang.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  SaveFormState(Self);
  CloseAllQueriesOnDataModule('dm');
end;

procedure TFrm_lang.FormCreate(Sender: TObject);
begin
  UpdateFormShowHint('Frm_lang');
  UniformizeButtonsSize(Self,  273, 25);
  UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
  UniformizeComponentAnchors(Self);
  LoadFormState(Self);
  icon_ImageList.Clear;
  LoadIconFromResource('RAR_IMAGE',1,icon_ImageList);
  LoadIconFromResource('SSA_IN_IMAGE',1,icon_ImageList);
  LoadIconFromResource('SSA_OUT_IMAGE',1,icon_ImageList);
  LoadIconFromResource('BIN_IN_IMAGE',1,icon_ImageList);
  LoadIconFromResource('UNBIN_IN_IMAGE',1,icon_ImageList);
end;

procedure TFrm_lang.lang_arch_TlBClick(Sender: TObject);
begin
  ArchiveSelectedFolderWithWinRAR;
end;

procedure TFrm_lang.Lang_desc_radioClick(Sender: TObject);
begin
    if  Lang_desc_radio.Checked=true then
  begin
    try
     with dm.langQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
     'select'+' '+
    'lang.lang_id,'+' '+
    'lang.lang_desc,'+' '+
    'lang.lang_naim,'+' '+
    'lang.lang_kind'+' '+
    'from lang'+' '+
    'where 1=1'+' '+
     'order by lang_desc asc';
      Open;
     end;
    except
        on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка  Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E);
    Raise;
  end;
end;
end;
end;

procedure TFrm_lang.Lang_fnd_EditKeyPress(Sender: TObject; var Key: Char);
begin
   try
   dm.langQuery.SQL.Text:=
   'select'+' '+
    'lang.lang_id,'+' '+
    'lang.lang_desc,'+' '+
    'lang.lang_naim,'+' '+
    'lang.lang_kind'+' '+
    'from lang'+' '+
    'where 1=1'+' '+
  'and lang.lang_desc like'+' '+
   QuotedStr(Concat(lang_fnd_Edit.Text,#37));
   dm.langQuery.close;
   dm.langQuery.Open;
except
   on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка   Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка : ' + E.Message);
    HandleException(E);
    raise;
end;
end;
end;

procedure TFrm_lang.Lang_kind_radioClick(Sender: TObject);
begin
    if  Lang_kind_radio.Checked=true then
  begin
    try
     with dm.langQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
     'select'+' '+
    'lang.lang_id,'+' '+
    'lang.lang_desc,'+' '+
    'lang.lang_naim,'+' '+
    'lang.lang_kind'+' '+
    'from lang'+' '+
    'where 1=1'+' '+
    'order by lang.lang_kind asc';
      Open;
     end;
    except
        on E: EDatabaseError do
  begin
    ShowMessage('Ошибка  базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка  Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E);
    Raise;
  end;
end;
end;
end;

procedure TFrm_lang.Lang_naim_radioClick(Sender: TObject);
begin
    if  Lang_naim_radio.Checked=true then
  begin
    try
     with dm.langQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
     'select'+' '+
    'lang.lang_id,'+' '+
    'lang.lang_desc,'+' '+
    'lang.lang_naim,'+' '+
    'lang.lang_kind'+' '+
    'from lang'+' '+
    'where 1=1'+' '+
    'order by lang.lang_naim asc';
      Open;
     end;
    except
        on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка   Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E);
    Raise;
  end;
end;
end;
end;

procedure TFrm_lang.Lang_reset_radioClick(Sender: TObject);
var i,j,c:Integer;
begin
     try
  if Lang_reset_radio.Checked then
  begin
    with Frm_lang do
    begin
      for I := 0 to ComponentCount - 1 do
      begin
        if Components[I] is TLabeledEdit then
        begin
          (Components[I] as TLabeledEdit).Clear;
        end;
      end;
      for c := 0 to ComponentCount - 1 do
      begin
        if Components[c] is TCheckBox then
        begin
          (Components[c] as TCheckBox).Checked := False;
        end;
      end;
      for j := 0 to ComponentCount - 1 do
      begin
        if Components[j] is TRadioButton then
        begin
          (Components[j] as TRadioButton).Checked := False;
        end;
      end;
    end;
    with dm.langQuery do
    begin
      Close;
      sql.Clear;
      sql.Text :=
      'select'+' '+
      'lang.lang_id,'+' '+
      'lang.lang_desc,'+' '+
      'lang.lang_naim,'+' '+
      'lang.lang_kind'+' '+
      'from lang'+' '+
      'where 1=1';
      Open;
    end;
  end;
except
  on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка COM: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E);
    raise;
  end;
end;
end;

procedure TFrm_lang.lang_sel_BtnClick(Sender: TObject);
begin
  try
    if not DM.Connection.Connected then
      raise EDatabaseError.Create('Соединение с базой не установлено ',4001);
    with DM.sel_lang_by_name do
    begin
      Close;
      Parameters.ParamByName('@lang_naim').Value :=Lang_cond_Edit.Text;
      Open;
       DM.langQuery.Recordset:=dm.sel_lang_by_name.Recordset;
    end;
  except
  on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка   Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E);
    Raise;
  end;
end;
end;

procedure TFrm_lang.SSaarvhBtnClick(Sender: TObject);
var
  OpenDialog: TOpenDialog;
  InFile, OutFile: string;
begin
OpenDialog := TOpenDialog.Create(nil);
  try
    OpenDialog.Title := 'Выберите файл для архивирования';
    OpenDialog.Filter := 'Все файлы (*.*)|*.*';

    if OpenDialog.Execute then
    begin
      InFile := OpenDialog.FileName;
      OutFile := ChangeFileExt(InFile, '.ssa');

      if SaveToSSA(InFile, OutFile, clMax) then
        ShowMessage('Файл успешно заархивирован: ' + OutFile)
      else
        ShowMessage('Ошибка при архивировании.');
    end;
  finally
    OpenDialog.Free;
  end;
end;


procedure TFrm_lang.SSAunarchlBtnClick(Sender: TObject);
var
 OpenDialog: TOpenDialog;
 InFile: string;
begin
 OpenDialog := TOpenDialog.Create(nil);
  try
    OpenDialog.Title := 'Выберите архив (.ssa) для распаковки';
    OpenDialog.Filter := 'SSA-файлы (*.ssa)|*.ssa|Все файлы (*.*)|*.*';

    if OpenDialog.Execute then
    begin
      InFile := OpenDialog.FileName;

      if LoadFromSSA(InFile) then
        ShowMessage('Файл успешно распакован.')
      else
        ShowMessage('Ошибка при распаковке.');
    end;
  finally
    OpenDialog.Free;
  end;
end;

end.
