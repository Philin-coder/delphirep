unit Un_mplan;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, StdCtrls, ExtCtrls, Grids, DBGrids,DB,adodb, DBCtrls, Mask;

type
  TFrm_plan = class(TForm)
    plan_PC: TPageControl;
    selTab: TTabSheet;
    InsTab: TTabSheet;
    updTab: TTabSheet;
    delTab: TTabSheet;
    sel_plan_InpBox: TGroupBox;
    sel_plan_btnBox: TGroupBox;
    sel_plan_grouperBox: TGroupBox;
    sel_plan_dataBox: TGroupBox;
    plan_condEdit: TLabeledEdit;
    plan_fndEdit: TLabeledEdit;
    sel_plan_btn: TButton;
    sel_plan_grd: TDBGrid;
    sel_plan_fio_m_radio: TRadioButton;
    sel_plan_opis_radio: TRadioButton;
    sel_plan_reset_radio: TRadioButton;
    man_data_box: TGroupBox;
    man_btn_box: TGroupBox;
    Ins_man_inp_box: TGroupBox;
    man_fio_inp: TLabeledEdit;
    man_ins_btn: TButton;
    man_upd_data_Box: TGroupBox;
    man_upd_btn_Box: TGroupBox;
    man_upd_inp_Box: TGroupBox;
    man_upd_pas_lbl: TStaticText;
    u_man_id_inp: TDBLookupComboBox;
    man_upd_btn: TButton;
    u_man_mail_inp: TLabeledEdit;
    del_man_data_box: TGroupBox;
    del_man_inp_box: TGroupBox;
    del_man_btn_box: TGroupBox;
    del_man_btn: TButton;
    del_man_usr_lbl: TStaticText;
    del_man_id_inp_DBL: TDBLookupComboBox;
    ins_man_grd: TDBGrid;
    man_cont_lbl: TStaticText;
    mancontinp: TMaskEdit;
    manmailinp: TLabeledEdit;
    man_phone_lbl: TStaticText;
    man_phone_inp: TMaskEdit;
    manloglbl: TStaticText;
    m_user_id_dbl: TDBLookupComboBox;
    man_upd_grd: TDBGrid;
    Del_men_grd: TDBGrid;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure sel_plan_btnClick(Sender: TObject);
    procedure plan_fndEditKeyPress(Sender: TObject; var Key: Char);
    procedure sel_plan_fio_m_radioClick(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_plan: TFrm_plan;

implementation

uses Un_dm, Un_func;

{$R *.dfm}

procedure TFrm_plan.FormActivate(Sender: TObject);
begin
  dm.PlanQuery.Open;
  dm.manQuery.Open;
  AdjustDBGridColumnWidths('Frm_plan',6000, 10);
end;

procedure TFrm_plan.FormClose(Sender: TObject; var Action: TCloseAction);
begin
   SaveFormState(Self);
   CloseAllQueriesOnDataModule('dm');
end;

procedure TFrm_plan.FormCreate(Sender: TObject);
begin
  UpdateFormShowHint('Frm_plan');
  UniformizeButtonsSize(Self,  273, 25);
  UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
  UniformizeComponentAnchors(Self);
  LoadFormState(Self);
  mancontinp.EditMask := '!+7 \(999\) 000-00-00;1;_';
  man_phone_inp.EditMask := '!+7 \(999\) 000-00-00;1;_';
end;

procedure TFrm_plan.plan_fndEditKeyPress(Sender: TObject; var Key: Char);
begin
   try
   dm.planQuery.SQL.Text:=
     'select'+' '+
        'mplan.id_plan,'+' '+
        'mplan.nazv,'+' '+
        'mplan.date_n,'+' '+
        'mplan.opis,'+' '+
        'manager.fio'+' '+
        'from mplan'+' '+
        'inner join manager on manager.maneger_id=mplan.maneger_id'+' '+
      'where 1=1'+' '+
        'and mplan.opis like'+
   QuotedStr(Concat(plan_fndedit.Text,#37));
   dm.planQuery.close;
   dm.PlanQuery.Open;
except on E: Exception do
  begin
  ShowMessage('Ошибка'+' '+E.Message);
  end;
  end;
end;

procedure TFrm_plan.sel_plan_btnClick(Sender: TObject);
begin
   try
    if not DM.Connection.Connected then
      raise Exception.Create('Соединение с базой не установлено');
    with DM.sel_plan_by_nazv do
    begin
      Close;
      Parameters.ParamByName('@nazv').Value :=plan_condEdit.Text;
      Open;
       DM.PlanQuery.Recordset:=dm.sel_plan_by_nazv.Recordset;
    end;
  except
    on E: EDatabaseError do
      ShowMessage('Ошибка: ' + E.Message);
    on E: Exception do
      ShowMessage('Ошибка: ' + E.Message);
  end;
end;

procedure TFrm_plan.sel_plan_fio_m_radioClick(Sender: TObject);
begin
  if  sel_plan_fio_m_radio.Checked=true then
  begin
    try
     with dm.planQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
      'select'+' '+
        'mplan.id_plan,'+' '+
        'mplan.nazv,'+' '+
        'mplan.date_n,'+' '+
        'mplan.opis,'+' '+
        'manager.fio'+' '+
        'from mplan'+' '+
        'inner join manager on manager.maneger_id=mplan.maneger_id'+' '+
      'where 1=1'+' '+
     'order by manager.fio asc';
      Open;
     end;
    except on E: EADOError do
    begin
      ShowMessage('Ошибка :'+' '+E.Message);
    end;
    end;
  end;
end;

end.
