unit Un_usl;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, StdCtrls, ExtCtrls, Grids, DBGrids,DB,adodb, DBCtrls, Mask;

type
  TFrm_usluga = class(TForm)
    UslPC: TPageControl;
    selTab: TTabSheet;
    InsTab: TTabSheet;
    updTab: TTabSheet;
    delTab: TTabSheet;
    sel_Usl_InpBox: TGroupBox;
    sel_Usl_btnBox: TGroupBox;
    sel_Usl_grouperBox: TGroupBox;
    sel_Usl_dataBox: TGroupBox;
    Usl_condEdit: TLabeledEdit;
    Usl_fndEdit: TLabeledEdit;
    sel_Usl_btn: TButton;
    sel_Usl_opis_radio: TRadioButton;
    sel_Usl_costradio: TRadioButton;
    sel_usl_reset_radio: TRadioButton;
    man_data_box: TGroupBox;
    man_btn_box: TGroupBox;
    Ins_man_inp_box: TGroupBox;
    man_fio_inp: TLabeledEdit;
    man_ins_btn: TButton;
    man_upd_data_Box: TGroupBox;
    man_upd_btn_Box: TGroupBox;
    man_upd_inp_Box: TGroupBox;
    man_upd_pas_lbl: TStaticText;
    u_man_id_inp: TDBLookupComboBox;
    man_upd_btn: TButton;
    u_man_mail_inp: TLabeledEdit;
    del_man_data_box: TGroupBox;
    del_man_inp_box: TGroupBox;
    del_man_btn_box: TGroupBox;
    del_man_btn: TButton;
    del_man_usr_lbl: TStaticText;
    del_man_id_inp_DBL: TDBLookupComboBox;
    ins_man_grd: TDBGrid;
    man_cont_lbl: TStaticText;
    mancontinp: TMaskEdit;
    manmailinp: TLabeledEdit;
    man_phone_lbl: TStaticText;
    man_phone_inp: TMaskEdit;
    manloglbl: TStaticText;
    m_user_id_dbl: TDBLookupComboBox;
    man_upd_grd: TDBGrid;
    Del_men_grd: TDBGrid;
    sel_usl_Grid: TDBGrid;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure sel_Usl_btnClick(Sender: TObject);
    procedure Usl_fndEditKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_usluga: TFrm_usluga;

implementation

uses Un_dm, Un_func;

{$R *.dfm}

procedure TFrm_usluga.FormActivate(Sender: TObject);
begin
  dm.uslQuery.Open;
  AdjustDBGridColumnWidths('Frm_usluga',6000, 10);
end;

procedure TFrm_usluga.FormClose(Sender: TObject; var Action: TCloseAction);
begin
   SaveFormState(Self);
   CloseAllQueriesOnDataModule('dm');
end;

procedure TFrm_usluga.FormCreate(Sender: TObject);
begin
  UpdateFormShowHint('Frm_usluga');
  UniformizeButtonsSize(Self,  273, 25);
  UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
  UniformizeComponentAnchors(Self);
  LoadFormState(Self);
end;

procedure TFrm_usluga.sel_Usl_btnClick(Sender: TObject);
begin
   try
    if not DM.Connection.Connected then
      raise Exception.Create('Cоединение с базой не установлено');
    with DM.sel_usl_by_opis do
    begin
      Close;
      Parameters.ParamByName('@opis').Value :=Usl_condEdit.Text;
      Open;
       DM.uslQuery.Recordset:=dm.sel_usl_by_opis.Recordset;
    end;
  except
    on E: EDatabaseError do
      ShowMessage('Ошибка: ' + E.Message);
    on E: Exception do
      ShowMessage('Ошибка: ' + E.Message);
  end;
end;

procedure TFrm_usluga.Usl_fndEditKeyPress(Sender: TObject; var Key: Char);
begin
   try
   dm.uslQuery.SQL.Text:=
        'select'+' '+
        'usluga.id_usl,'+' '+
        'usluga.opis,'+' '+
        'usluga.date_o,'+
        'usluga.cost'+' '+
        'from usluga'+' '+
        'where 1=1'+' '+
        'and usluga.date_o is  null'+' '+
        'and usluga.opis like'+
   QuotedStr(Concat(usl_fndedit.Text,#37));
   dm.uslQuery.close;
   dm.uslQuery.Open;
except on E: Exception do
  begin
  ShowMessage('Ошибка'+' '+E.Message);
  end;
  end;
end;

end.
