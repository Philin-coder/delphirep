unit Un_user;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, StdCtrls, ExtCtrls, Grids, DBGrids,DB,adodb;

type
  TFrm_user = class(TForm)
    userPC: TPageControl;
    selTab: TTabSheet;
    TabSheet2: TTabSheet;
    TabSheet3: TTabSheet;
    TabSheet4: TTabSheet;
    selUserInpBox: TGroupBox;
    selUserbtnBox: TGroupBox;
    selUsergrouperBox: TGroupBox;
    selUserdataBox: TGroupBox;
    usercondEdit: TLabeledEdit;
    userfndEdit: TLabeledEdit;
    selUser_btn: TButton;
    selUser_grd: TDBGrid;
    selUserlogradio: TRadioButton;
    selUserpasradioselUserlogradio: TRadioButton;
    selUserresetradio: TRadioButton;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure selUser_btnClick(Sender: TObject);
    procedure userfndEditKeyPress(Sender: TObject; var Key: Char);
    procedure selUserlogradioClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_user: TFrm_user;

implementation

uses Un_dm, Un_func;

{$R *.dfm}

procedure TFrm_user.FormActivate(Sender: TObject);
begin
  dm.userQuery.Open;
  AdjustDBGridColumnWidths('Frm_user',6000, 10);
end;

procedure TFrm_user.FormClose(Sender: TObject; var Action: TCloseAction);
begin
   SaveFormState(Self);
   CloseAllQueriesOnDataModule('dm');
end;

procedure TFrm_user.FormCreate(Sender: TObject);
begin
  UpdateFormShowHint('Frm_user');
  UniformizeButtonsSize(Self,  273, 25);
  UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
  UniformizeComponentAnchors(Self);
  LoadFormState(Self);
end;

procedure TFrm_user.selUserlogradioClick(Sender: TObject);
begin
  if  selUserlogradio.Checked=true then
  begin
    try
     with dm.userQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
     'select'+' '+
    'usver_r.user_id,'+' '+
    'usver_r.user_pas,'+' '+
    'usver_r.usver_name'+' '+
    'from usver_r'+' '+
    'where 1=1'+' '+
    'order by usver_r.usver_name asc';
      Open;
     end;
    except on E: EADOError do
    begin
      ShowMessage('Ошибка :'+' '+E.Message);
    end;
    end;
  end;
end;

procedure TFrm_user.selUser_btnClick(Sender: TObject);
begin
  try
    if not DM.Connection.Connected then
      raise Exception.Create('Соединение с базой  не установлено');
    with DM.sel_user_by_fio do
    begin
      Close;
      Parameters.ParamByName('@usver_name').Value :=usercondEdit.Text;
      Open;
       DM.userQuery.Recordset:=dm.sel_user_by_fio.Recordset;
    end;
  except
    on E: EDatabaseError do
      ShowMessage('Ошибка: ' + E.Message);
    on E: Exception do
      ShowMessage('Ошибка: ' + E.Message);
  end;
end;

procedure TFrm_user.userfndEditKeyPress(Sender: TObject; var Key: Char);
begin
   try
   dm.userQuery.SQL.Text:=
   'select'+' '+
    'usver_r.user_id,'+' '+
    'usver_r.user_pas,'+' '+
    'usver_r.usver_name'+' '+
    'from usver_r'+' '+
    'where 1=1'+' '+
    'and user_pas like'+
   QuotedStr(Concat(userfndedit.Text,#37));
   dm.userQuery.close;
   dm.userQuery.Open;
except on E: Exception do
  begin
  ShowMessage('Ошибка'+' '+E.Message);
  end;
  end;
end;

end.
