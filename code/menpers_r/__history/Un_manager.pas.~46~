unit Un_manager;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, StdCtrls, ExtCtrls, Grids, DBGrids,DB,adodb, DBCtrls, Mask;

type
  TFrm_manager = class(TForm)
    manPC: TPageControl;
    selTab: TTabSheet;
    InsTab: TTabSheet;
    updTab: TTabSheet;
    delTab: TTabSheet;
    semanInpBox: TGroupBox;
    selmanrbtnBox: TGroupBox;
    selmangrouperBox: TGroupBox;
    selmandataBox: TGroupBox;
    mancondEdit: TLabeledEdit;
    manfndEdit: TLabeledEdit;
    selman_btn: TButton;
    selman_grd: TDBGrid;
    selmanfioradio: TRadioButton;
    selmanlogradio: TRadioButton;
    selmanresetradio: TRadioButton;
    man_data_box: TGroupBox;
    man_btn_box: TGroupBox;
    Ins_man_inp_box: TGroupBox;
    man_fio_inp: TLabeledEdit;
    man_ins_btn: TButton;
    man_upd_data_Box: TGroupBox;
    man_upd_btn_Box: TGroupBox;
    man_upd_inp_Box: TGroupBox;
    man_upd_pas_lbl: TStaticText;
    u_man_id_inp: TDBLookupComboBox;
    man_upd_btn: TButton;
    u_man_mail_inp: TLabeledEdit;
    del_man_data_box: TGroupBox;
    del_man_inp_box: TGroupBox;
    del_man_btn_box: TGroupBox;
    del_man_btn: TButton;
    del_man_usr_lbl: TStaticText;
    del_man_id_inp_DBL: TDBLookupComboBox;
    ins_man_grd: TDBGrid;
    man_cont_lbl: TStaticText;
    mancontinp: TMaskEdit;
    manmailinp: TLabeledEdit;
    man_phone_lbl: TStaticText;
    man_phone_inp: TMaskEdit;
    manloglbl: TStaticText;
    m_user_id_dbl: TDBLookupComboBox;
    man_upd_grd: TDBGrid;
    Del_men_grd: TDBGrid;
    searchTab: TTabSheet;
    search_inpBox: TGroupBox;
    search_stringBox: TGroupBox;
    search_dataBox: TGroupBox;
    searchGrid: TDBGrid;
    search_cond_edit: TLabeledEdit;
    search_kind_lbl: TStaticText;
    searchCombo: TComboBox;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure selman_btnClick(Sender: TObject);
    procedure manfndEditKeyPress(Sender: TObject; var Key: Char);
    procedure selmanfioradioClick(Sender: TObject);
    procedure selmanlogradioClick(Sender: TObject);
    procedure selmanresetradioClick(Sender: TObject);
    procedure mancontinpExit(Sender: TObject);
    procedure man_phone_inpExit(Sender: TObject);
    procedure man_ins_btnClick(Sender: TObject);
    procedure man_upd_btnClick(Sender: TObject);
    procedure del_man_btnClick(Sender: TObject);
    procedure search_cond_editKeyPress(Sender: TObject; var Key: Char);
    procedure searchComboChange(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_manager: TFrm_manager;
  search_stat:Integer;

implementation

uses Un_dm, Un_func;

{$R *.dfm}

procedure TFrm_manager.del_man_btnClick(Sender: TObject);
var
  AreFieldsEmpty: Boolean;
begin
  AreFieldsEmpty:=(
  (del_man_id_inp_DBL.Text='')
  );
  if AreFieldsEmpty then
  begin
      MessageDlg('Ошибка: одно из полей пустое или текст не прошел проверку.',
    mtError, [mbOK], 0);
    Beep;
    Exit;
  end;
  try
      with dm.del_men do
      begin
        if not Connection.Connected then
          raise Exception.Create('Соединение с базой не установлено');
           Parameters.ParamByName('@maneger_id').Value :=
           dm.manQuery.FieldByName('maneger_id').AsString;
           ExecProc;
           dm.manQuery.Close;
           dm.manQuery.Open;
        MessageDlg('Изменения внесены', mtInformation, [mbOK], 0);
      end;
    except
      on E: EADOError do
      begin
        ShowMessage('Ошибка: ' + E.Message);
      end;
      on E: Exception do
      begin
        ShowMessage('Ошибка: ' + E.Message);
      end;
    end;
end;

procedure TFrm_manager.FormActivate(Sender: TObject);
begin
  dm.userQuery.Open;
  dm.manQuery.Open;
  dm.searchQuery.Open;
  AdjustDBGridColumnWidths('Frm_manager',6000, 10);
end;

procedure TFrm_manager.FormClose(Sender: TObject; var Action: TCloseAction);
begin
   SaveFormState(Self);
   CloseAllQueriesOnDataModule('dm');
   search_cond_edit.EditLabel.Caption:='Поисковая строка';
   sear
end;

procedure TFrm_manager.FormCreate(Sender: TObject);
begin
  UpdateFormShowHint('Frm_manager');
  UniformizeButtonsSize(Self,  273, 25);
  UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
  UniformizeComponentAnchors(Self);
  LoadFormState(Self);
  mancontinp.EditMask := '!+7 \(999\) 000-00-00;1;_';
  man_phone_inp.EditMask := '!+7 \(999\) 000-00-00;1;_';
  search_cond_edit.EditLabel.Caption:='Поисковая строка';
end;

procedure TFrm_manager.mancontinpExit(Sender: TObject);
begin
   if IsMaskEditEmpty(mancontinp) then
  begin
    mancontinp.Color := clRed;
    ShowMessage('Данное поле нужно заполнить');
    mancontinp.SetFocus;
  end
  else
    mancontinp.Color := clWindow;
end;

procedure TFrm_manager.manfndEditKeyPress(Sender: TObject; var Key: Char);
begin
   try
   dm.manQuery.SQL.Text:=
   'select'+' '+
    'manager.maneger_id,'+' '+
    'manager.fio,'+' '+
    'manager.cont,'+' '+' '+
    'manager.email,'+' '+' '+
    'manager.phone,'+' '+
    'usver_r.usver_name'+' '+
    'from manager'+' '+
    'inner join usver_r on usver_r.user_id=manager.user_id'+' '+
    'where 1=1'+' '+
  'and usver_r.usver_name like'+
   QuotedStr(Concat(manfndedit.Text,#37));
   dm.manQuery.close;
   dm.manQuery.Open;
except on E: Exception do
  begin
  ShowMessage('Ошибка'+' '+E.Message);
  end;
  end;
end;

procedure TFrm_manager.man_ins_btnClick(Sender: TObject);
const
  AllowedChars: TSysCharSet = ['А'..'Я', 'а'..'я', '0'..'9', ' ', '-', '.'];
var
  AreFieldsEmpty: Boolean;
  AreFieldsValid: Boolean;
begin
  AreFieldsEmpty:=(
  (Trim(man_fio_inp.Text)='')or
  (Trim(manmailinp.Text)='')or
  (Trim(mancontinp.Text)='')or
  (Trim(man_phone_inp.Text)='')or
  (m_user_id_dbl.Text='')
  );
  AreFieldsValid:=(
  ValidateComponentText(man_fio_inp,AllowedChars)and
  IsValidEmail(manmailinp.Text)
  );
  if AreFieldsEmpty or not AreFieldsValid then
  begin
      MessageDlg('Ошибка: одно из полей пустое или текст не прошел проверку.',
    mtError, [mbOK], 0);
    Beep;
    Exit;
  end;
  try
      with dm.ins_manager do
      begin
        if not Connection.Connected then
          raise Exception.Create('Соединение с базой не установлено');
           Parameters.ParamByName('@fio').Value :=man_fio_inp.Text;
           Parameters.ParamByName('@cont').Value:=mancontinp.Text;
           Parameters.ParamByName('@email').Value:=manmailinp.Text;
           Parameters.ParamByName('@phone').Value:=man_phone_inp.Text;
           Parameters.ParamByName('@User_Id').Value:=
           dm.userQuery.FieldByName('User_Id').AsString;
           ExecProc;
           dm.manQuery.Close;
           dm.manQuery.Open;
        MessageDlg('Изменения внесены', mtInformation, [mbOK], 0);
      end;
    except
      on E: EADOError do
      begin
        ShowMessage('Ошибка: ' + E.Message);
      end;
      on E: Exception do
      begin
        ShowMessage('Ошибка: ' + E.Message);
      end;
    end;
end;

procedure TFrm_manager.man_phone_inpExit(Sender: TObject);
begin
   if IsMaskEditEmpty(man_phone_inp) then
  begin
    man_phone_inp.Color := clRed;
    ShowMessage('Данное поле нужно заполнить');
    man_phone_inp.SetFocus;
  end
  else
  man_phone_inp.Color := clWindow;
end;

procedure TFrm_manager.man_upd_btnClick(Sender: TObject);
var
  AreFieldsEmpty: Boolean;
  AreFieldsValid: Boolean;

begin
  AreFieldsEmpty:=(
  (u_man_id_inp.Text='')or
  (Trim(u_man_mail_inp.Text)='')
  );
  AreFieldsValid:=(
  IsValidEmail(u_man_mail_inp.Text)
  );
  if AreFieldsEmpty or not  AreFieldsValid then
  begin
    MessageDlg('Ошибка: одно из полей пустое или текст не прошел проверку.',
    mtError, [mbOK], 0);
    Beep;
    Exit;
  end;
    try
      with dm.upd_man do
      begin
        if not Connection.Connected then
          raise Exception.Create('Соединение с базой не установлено');
           Parameters.ParamByName('@maneger_id').Value :=
           dm.manQuery.FieldByName('maneger_id').AsString;
           Parameters.ParamByName('@m_email').Value:=u_man_mail_inp.Text;
           ExecProc;
           dm.manQuery.Close;
           dm.manQuery.Open;
        MessageDlg('Изменения внесены', mtInformation, [mbOK], 0);
      end;
    except
      on E: EADOError do
      begin
        ShowMessage('Ошибка: ' + E.Message);
      end;
      on E: Exception do
      begin
        ShowMessage('Ошибка: ' + E.Message);
      end;
    end;

end;

procedure TFrm_manager.searchComboChange(Sender: TObject);
begin
case searchCombo.ItemIndex of
0:
begin

end;
1:
begin

end;
2:
begin

end;
3:
begin

end;
4:
begin

end;
end;//case


end;

procedure TFrm_manager.search_cond_editKeyPress(Sender: TObject; var Key: Char);
begin
  case searchCombo.ItemIndex of
  0:
  begin
    try
   dm.klientQuery.SQL.Text:=
          'select'+' '+
    'manager.maneger_id,'+' '+
    'manager.fio,'+' '+
    'manager.cont,'+' '+' '+
    'manager.email,'+' '+' '+
    'manager.phone,'+' '+
    'usver_r.usver_name'+' '+
    'from manager'+' '+
    'inner join usver_r on usver_r.user_id=manager.user_id'+' '+
    'where 1=1'+' '+
   'and manager.fio like'+
QuotedStr(Concat(search_cond_edit.Text,#37));
   dm.searchQuery.close;
   dm.searchQuery.Open;
except on E: Exception do
  begin
  ShowMessage('Ошибка'+' '+E.Message);
  end;
  end;
  end;


  1:
  begin

  end;
  2:
  begin

  end;
  3:
  begin

  end;
  4:
  begin

  end;
      
  end;//case
end;

procedure TFrm_manager.selmanfioradioClick(Sender: TObject);
begin
  if  selmanfioradio.Checked=true then
  begin
    try
     with dm.manQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
     'select'+' '+
    'manager.maneger_id,'+' '+
    'manager.fio,'+' '+
    'manager.cont,'+' '+' '+
    'manager.email,'+' '+' '+
    'manager.phone,'+' '+
    'usver_r.usver_name'+' '+
    'from manager'+' '+
    'inner join usver_r on usver_r.user_id=manager.user_id'+' '+
    'where 1=1'+' '+
    'order by manager.fio asc';
      Open;
     end;
    except on E: EADOError do
    begin
      ShowMessage('Ошибка :'+' '+E.Message);
    end;
    end;
  end;
end;

procedure TFrm_manager.selmanlogradioClick(Sender: TObject);
begin
  if  selmanlogradio.Checked=true then
  begin
    try
     with dm.manQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
    'select'+' '+
    'manager.maneger_id,'+' '+
    'manager.fio,'+' '+
    'manager.cont,'+' '+' '+
    'manager.email,'+' '+' '+
    'manager.phone,'+' '+
    'usver_r.usver_name'+' '+
    'from manager'+' '+
    'inner join usver_r on usver_r.user_id=manager.user_id'+' '+
    'where 1=1'+' '+
    'order by usver_r.usver_name asc';
      Open;
     end;
    except on E: EADOError do
    begin
      ShowMessage('Ошибка :'+' '+E.Message);
    end;
    end;
  end;
end;

procedure TFrm_manager.selmanresetradioClick(Sender: TObject);
var i,j,c:Integer;
begin
  if  selmanresetradio.Checked=true then
with Frm_manager do
    for I := 0 to ComponentCount - 1 do
     begin
       if (Components[i] is TLabeledEdit)  then
        begin
          (Components[i] as TLabeledEdit).Clear;
        end;
     end;
       with Frm_manager do
    for c := 0 to ComponentCount - 1 do
     begin
       if (Components[c] is TCheckBox)  then
        begin
          (Components[c] as TCheckBox).Checked:=False;
        end;
     end;
     with dm.manQuery do
     begin
     Close;
     sql.Clear;
     sql.Text:=
     'select'+' '+
    'manager.maneger_id,'+' '+
    'manager.fio,'+' '+
    'manager.cont,'+' '+' '+
    'manager.email,'+' '+' '+
    'manager.phone,'+' '+
    'usver_r.usver_name'+' '+
    'from manager'+' '+
    'inner join usver_r on usver_r.user_id=manager.user_id'+' '+
    'where 1=1';
    Open;
     end;
    with Frm_manager do
    for j := 0 to ComponentCount - 1 do
    begin
      if(Components[j] is TRadioButton)  then
      begin
        (Components[j] as TRadioButton).Checked:=False;
      end;
    end;
end;

procedure TFrm_manager.selman_btnClick(Sender: TObject);
begin
   try
    if not DM.Connection.Connected then
      raise Exception.Create('Cоединение с базой не установлено');
    with DM.sel_man_by_fio do
    begin
      Close;
      Parameters.ParamByName('@fio').Value :=mancondEdit.Text;
      Open;
       DM.manQuery.Recordset:=dm.sel_man_by_fio.Recordset;
    end;
  except
    on E: EDatabaseError do
      ShowMessage('Ошибка: ' + E.Message);
    on E: Exception do
      ShowMessage('Ошибка: ' + E.Message);
  end;
end;

end.
