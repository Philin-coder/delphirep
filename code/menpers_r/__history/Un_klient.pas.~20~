unit Un_klient;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, StdCtrls, ExtCtrls, Grids, DBGrids,DB,adodb, DBCtrls, Mask;

type
  TFrm_klient = class(TForm)
    klient_PC: TPageControl;
    selTab: TTabSheet;
    InsTab: TTabSheet;
    updTab: TTabSheet;
    delTab: TTabSheet;
    sel_klient_InpBox: TGroupBox;
    sel_klient_btnBox: TGroupBox;
    sel_klient_grouperBox: TGroupBox;
    sel_klient_dataBox: TGroupBox;
    klient_condEdit: TLabeledEdit;
    klient_fndEdit: TLabeledEdit;
    sel_klient_btn: TButton;
    sel_klient_grd: TDBGrid;
    sel_klient_fio_m_radio: TRadioButton;
    sel_klient_opis_radio: TRadioButton;
    sel_klient_reset_radio: TRadioButton;
    man_data_box: TGroupBox;
    plan_btn_box: TGroupBox;
    Ins_plan_inp_box: TGroupBox;
    ins_plan_nazv_inp: TLabeledEdit;
    plan_ins_btn: TButton;
    plan_upd_data_Box: TGroupBox;
    plan_upd_btn_Box: TGroupBox;
    plan_upd_inp_Box: TGroupBox;
    plan_upd_pl_lbl: TStaticText;
    u_plan_id_inp: TDBLookupComboBox;
    plan_upd_btn: TButton;
    del_plan_data_box: TGroupBox;
    del_plan_inp_box: TGroupBox;
    del_plan_btn_box: TGroupBox;
    del_plan_btn: TButton;
    del_plan_pl_lbl: TStaticText;
    del_plan_id_inp_DBL: TDBLookupComboBox;
    ins_p_user_id_dbl: TDBLookupComboBox;
    ins_plan_Grd: TDBGrid;
    Plan_daten_lbl: TStaticText;
    ins_plan_date_n_inp: TDateTimePicker;
    ins_plan_opis_inp: TLabeledEdit;
    ins_plan_manager_id_lbl: TStaticText;
    plan_upd_Grd: TDBGrid;
    u_plan_date_n_lbl: TStaticText;
    U_plan_date_n_inp: TDateTimePicker;
    Del_plan_Grd: TDBGrid;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure sel_klient_btnClick(Sender: TObject);
    procedure klient_fndEditKeyPress(Sender: TObject; var Key: Char);
    procedure sel_klient_fio_m_radioClick(Sender: TObject);
    procedure sel_klient_opis_radioClick(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_klient: TFrm_klient;

implementation

uses Un_dm, Un_func;

{$R *.dfm}

procedure TFrm_klient.FormActivate(Sender: TObject);
begin
  dm.PlanQuery.Open;
  dm.UslQuery.Open;
  dm.klientQuery.Open;
  AdjustDBGridColumnWidths('Frm_klient',6000, 10);
end;

procedure TFrm_klient.FormClose(Sender: TObject; var Action: TCloseAction);
begin
   SaveFormState(Self);
   CloseAllQueriesOnDataModule('dm');
end;

procedure TFrm_klient.FormCreate(Sender: TObject);
begin
  UpdateFormShowHint('Frm_klient');
  UniformizeButtonsSize(Self,  273, 25);
  UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
  UniformizeComponentAnchors(Self);
  LoadFormState(Self);
end;

procedure TFrm_klient.klient_fndEditKeyPress(Sender: TObject; var Key: Char);
begin
   try
   dm.klientQuery.SQL.Text:=
    'select'+' '+
    'klient.klient_id,'+' '+
     'klient.naim,'+' '+
      'klient.otch,'+' '+
      'klient.snmae,'+' '+
        'klient.b_date,'+' '+
        'klient.cont,'+' '+
        'klient.phone,'+' '+
        'mplan.nazv,'+' '+
        'usluga.opis,'+' '+
        'klient.email'+' '+
        'from klient'+' '+
        'inner join mplan on mplan.id_plan=klient.id_plan'+' '+
        'inner join usluga on usluga.id_usl=klient.id_usl'+' '+
        ' where 1=1'+' '+
        'and klient.snmae like'+
   QuotedStr(Concat(klient_fndedit.Text,#37));
   dm.klientQuery.close;
   dm.klientQuery.Open;
except on E: Exception do
  begin
  ShowMessage('Ошибка'+' '+E.Message);
  end;
  end;
end;

procedure TFrm_klient.sel_klient_btnClick(Sender: TObject);
begin
  try
    if not DM.Connection.Connected then
      raise Exception.Create('Соединение с базой не установлено');
    with DM.sel_klient_by_fam do
    begin
      Close;
      Parameters.ParamByName('@snmae').Value :=klient_condEdit.Text;
      Open;
       DM.klientQuery.Recordset:=dm.sel_klient_by_fam.Recordset;
    end;
  except
    on E: EDatabaseError do
      ShowMessage('Ошибка: ' + E.Message);
    on E: Exception do
      ShowMessage('Ошибка: ' + E.Message);
  end;
end;

procedure TFrm_klient.sel_klient_fio_m_radioClick(Sender: TObject);
begin
   if  sel_klient_fio_m_radio.Checked=true then
  begin
    try
     with dm.klientQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
    'select'+' '+
    'klient.klient_id,'+' '+
     'klient.naim,'+' '+
      'klient.otch,'+' '+
      'klient.snmae,'+' '+
        'klient.b_date,'+' '+
        'klient.cont,'+' '+
        'klient.phone,'+' '+
        'mplan.nazv,'+' '+
        'usluga.opis,'+' '+
        'klient.email'+' '+
        'from klient'+' '+
        'inner join mplan on mplan.id_plan=klient.id_plan'+' '+
        'inner join usluga on usluga.id_usl=klient.id_usl'+' '+
        ' where 1=1'+' '+
      'order by klient.snmae asc';
      Open;
     end;
    except on E: EADOError do
    begin
      ShowMessage('Ошибка :'+' '+E.Message);
    end;
    end;
  end;
end;

procedure TFrm_klient.sel_klient_opis_radioClick(Sender: TObject);
begin
   if  sel_klient_opis_radio.Checked=true then
  begin
    try
     with dm.klientQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
      'select'+' '+
    'klient.klient_id,'+' '+
     'klient.naim,'+' '+
      'klient.otch,'+' '+
      'klient.snmae,'+' '+
        'klient.b_date,'+' '+
        'klient.cont,'+' '+
        'klient.phone,'+' '+
        'mplan.nazv,'+' '+
        'usluga.opis,'+' '+
        'klient.email'+' '+
        'from klient'+' '+
        'inner join mplan on mplan.id_plan=klient.id_plan'+' '+
        'inner join usluga on usluga.id_usl=klient.id_usl'+' '+
        ' where 1=1'+' '+
      'order by usluga.opis asc';
      Open;
     end;
    except on E: EADOError do
    begin
      ShowMessage('Ошибка :'+' '+E.Message);
    end;
    end;
  end;
end;

end.
