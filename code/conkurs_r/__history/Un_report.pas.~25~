unit Un_report;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ComCtrls, ExtCtrls, Grids, DBGrids,db,ADODB, Mask, ToolWin,
  ImgList, DBCtrls;

type
  TFrm_report = class(TForm)
    report_PC: TPageControl;
    insTab: TTabSheet;
    report_ins_inpBox: TGroupBox;
    report_ntnBox: TGroupBox;
    report_dataBox: TGroupBox;
    report_insBtn: TButton;
    report_grid: TDBGrid;
    report_databLbl: TLabel;
    report_begin_data_inp: TDateTimePicker;
    report_dataeLbl: TLabel;
    end_data_inp: TDateTimePicker;
    get_pas_toolbar: TToolBar;
    get_pas_btn: TToolButton;
    pasvarImageList: TImageList;
    procedure FormActivate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure report_insBtnClick(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_report: TFrm_report;

implementation

uses Un_dm, Un_func, Un_main;

{$R *.dfm}
procedure TFrm_report.FormActivate(Sender: TObject);
begin
  dm.muserQuery.Open;
  dm.workQuery.Open;
end;

procedure TFrm_report.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  SaveFormState(Self);
  CloseAllQueriesOnDataModule('dm');
end;

procedure TFrm_report.FormCreate(Sender: TObject);
begin
 Frm_report.KeyPreview:=true;
 Frm_report.ShowHint:=true;
 UniformizeButtonsSize(Self,  273, 25);
 UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
 UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
 LoadFormState(Self);
 LoadIconFromResource('PASSWD',1,pasvarImageList);
 get_pas_btn.ImageIndex:=0;
end;

procedure TFrm_report.report_insBtnClick(Sender: TObject);
begin
try
    if not DM.Connection.Connected then
      raise Exception.Create('Соединение с базой не установлено');

    with DM.report1 do
    begin
      Close;
           Parameters.ParamByName('@d1').Value
           :=DateToStr_(report_begin_data_inp.Date);
           Parameters.ParamByName('@d2').Value
           :=DateToStr_(end_data_inp.Date);
      Open;
       DM.reportQuery.Recordset:=dm.report1.Recordset;
    end;
  except
    on E: EDatabaseError do
      ShowMessage('Ошибка: ' + E.Message);
    on E: Exception do
      ShowMessage('Ошибка: ' + E.Message);
  end;
end;

end.
