unit Un_csv_loader;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls,db,adodb, ComCtrls, Grids, DBGrids, ExtCtrls, DBCtrls;

type
  TFrm_csv_loader = class(TForm)
    csvlPC: TPageControl;
    delTab: TTabSheet;
    csvldeldataBox: TGroupBox;
    rpobtn_box: TGroupBox;
    rpBtn: TButton;
    csvlGrd: TDBGrid;
    xmlOD: TOpenDialog;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure rpBtnClick(Sender: TObject);
  private
    procedure   LoadGoodsFromCSV(const FileName: string);
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_csv_loader: TFrm_csv_loader;

implementation

uses Un_dm, Un_func, Un_man;

{$R *.dfm}
procedure TFrm_csv_loader.LoadGoodsFromCSV(const FileName: string);
var
  StringList: TStringList;
  i, FieldCount: Integer;
  Fields: array[0..2] of string; // Массив для хранения полей строки (фиксированный размер)
  IDGood: Integer;              // Для хранения значения id_good
  PriceGood: Double;            // Для хранения значения price_good
begin
  // Создаем объект для чтения CSV
  StringList := TStringList.Create;
  try
    // Загружаем файл
    StringList.LoadFromFile(FileName);

    // Очищаем таблицу Goods перед загрузкой новых данных
    with DM.gQuery do
    begin
      Close;
      SQL.Text := 'DELETE FROM Goods';
      ExecSQL;
    end;

    // Разбираем строки CSV
    for i := 1 to StringList.Count - 1 do // Пропускаем первую строку (заголовок)
    begin
      // Разделяем строку по запятой с помощью функции SplitString
      FieldCount := SplitString(StringList[i], ',', Fields);

      // Проверяем, что строка содержит все необходимые поля
      if FieldCount < 3 then
      begin
        ShowMessage('Ошибка: неверный формат строки в CSV-файле.');
        Continue; // Пропускаем некорректную строку
      end;

      // Преобразуем поля в нужные типы данных
      try
        IDGood := StrToIntDef(Fields[0], 0);          // Преобразуем id_good в целое число
        PriceGood := StrToFloat(Fields[2]);          // Преобразуем price_good в число с плавающей точкой
      except
        on E: Exception do
        begin
          ShowMessage('Ошибка при преобразовании данных: ' + E.Message);
          Continue; // Пропускаем некорректную строку
        end;
      end;

      // Вставляем данные в таблицу Goods
      with DM.gQuery do
      begin
        Close;
        SQL.Text :=
          'INSERT INTO Goods (id_good, naim_good, price_good) ' +
          'VALUES (:id_good, :naim_good, :price_good)';

        // Устанавливаем значения параметров
        Parameters.ParamByName('id_good').Value := IDGood;         // Используем Value для всех типов
        Parameters.ParamByName('naim_good').Value := Fields[1];    // Используем Value для всех типов
        Parameters.ParamByName('price_good').Value := PriceGood;   // Используем Value для всех типов

        ExecSQL;
      end;
    end;

    // Обновляем данные в DBGrid
    DM.gQuery.Close;
    DM.gQuery.SQL.Text := 'SELECT * FROM Goods';
    DM.gQuery.Open;

    ShowMessage('Данные успешно загружены из файла.');
  except
    on E: Exception do
      ShowMessage('Ошибка при загрузке данных: ' + E.Message);
  end;
end;

procedure TFrm_csv_loader.rpBtnClick(Sender: TObject);
begin
if xmlOD.Execute then
  begin
    try
      LoadGoodsFromCSV(xmlOD.FileName);
    except
      on E: Exception do
        ShowMessage('Ошибка при загрузке данных: ' + E.Message);
    end;
  end;
end;

procedure TFrm_csv_loader.FormActivate(Sender: TObject);
begin
dm.GQuery.Open;
end;

procedure TFrm_csv_loader.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  SaveFormState(Self);
  CloseAllQueriesOnDataModule('dm');
end;

procedure TFrm_csv_loader.FormCreate(Sender: TObject);
begin
Frm_csv_loader.ShowHint:=true;
 UniformizeButtonsSize(Self,  273, 25);
 UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
 UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
 LoadFormState(Self);
 xmlOD.Filter:='CSV Files (*.csv)|*.csv|All Files (*.*)|*.*';
end;

end.
