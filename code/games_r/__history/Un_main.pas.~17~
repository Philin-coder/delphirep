unit Un_main;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls,jpeg, Menus;
  const
  FileName = 'connection_string.txt';

type
  TFrm_main = class(TForm)
    main_Image: TImage;
    ItemsMenu: TMainMenu;
    etap_item: TMenuItem;
    work_item: TMenuItem;
    user_item: TMenuItem;
    N1: TMenuItem;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure etap_itemClick(Sender: TObject);
    procedure work_itemClick(Sender: TObject);
    procedure user_itemClick(Sender: TObject);
    procedure N1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_main: TFrm_main;

implementation

uses Un_dm, Un_func, Un_etap, Un_work, Un_user, Un_men;

{$R *.dfm}

procedure TFrm_main.etap_itemClick(Sender: TObject);
begin
   try
    UpdateFormProperties('Frm_etap', 'Форма работы с данными этапа разработки',
      clBtnFace, 1024, 768);
    Frm_etap.ShowModal;
  except
    on E: Exception do
    begin
      if not (E is EMyException) then
        raise EDatabaseError.Create('Ошибка при работе с формой этапа разработки', 3001);
      HandleException(E);
      if Assigned(Frm_etap) then
        Frm_etap.Free;
      raise;
    end;
  end;

end;

procedure TFrm_main.FormActivate(Sender: TObject);
begin
  SaveConnectionStringToFile(FileName, dm.connection.ConnectionString);
end;

procedure TFrm_main.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  main_Image.Picture := nil;
  SaveFormState(Self);
end;

procedure TFrm_main.FormCreate(Sender: TObject);
begin
  SetFormPropertiesIfNeeded;
  AdjustImageProperties(main_Image);
  LoadFormState(Self);
  LoadImageFromResource('BACKGROUND_IMAGE', main_Image);
end;

procedure TFrm_main.N1Click(Sender: TObject);
begin
   try
    UpdateFormProperties('Frm_men', 'Форма работы с данными о менеджере',
      clBtnFace, 1024, 768);
    Frm_men.ShowModal;
  except
    on E: Exception do
    begin
      if not (E is EMyException) then
        raise EDatabaseError.Create('Ошибка при работе с формой эработы с данными  менеджера', 3001);
      HandleException(E);
      if Assigned(Frm_men) then
        Frm_men.Free;
      raise;
    end;
  end;
end;

procedure TFrm_main.user_itemClick(Sender: TObject);
begin
  try
    UpdateFormProperties('Frm_user', 'Форма работы с данными о пользователе',
      clBtnFace, 1024, 768);
    Frm_user.ShowModal;
  except
    on E: Exception do
    begin
      if not (E is EMyException) then
        raise EDatabaseError.Create('Ошибка при работе с формой эработы с данными о пользователе', 3001);
      HandleException(E);
      if Assigned(Frm_user) then
        Frm_user.Free;
      raise;
    end;
  end;
end;

procedure TFrm_main.work_itemClick(Sender: TObject);
begin
  try
    UpdateFormProperties('Frm_work', 'Форма работы с данными о работе',
      clBtnFace, 1024, 768);
    Frm_work.ShowModal;
  except
    on E: Exception do
    begin
      if not (E is EMyException) then
        raise EDatabaseError.Create('Ошибка при работе с формой этапа работы', 3001);
      HandleException(E);
      if Assigned(Frm_work) then
        Frm_work.Free;
      raise;
    end;
  end;
end;

end.
