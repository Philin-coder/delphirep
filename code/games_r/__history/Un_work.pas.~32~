unit Un_work;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs,db,ADODB, Grids, DBGrids, StdCtrls, ComCtrls, ExtCtrls,ActiveX,
  DBCtrls;

type
  TFrm_work = class(TForm)
    WorkPC: TPageControl;
    SelTab: TTabSheet;
    insTab: TTabSheet;
    updTab: TTabSheet;
    delTab: TTabSheet;
    WorkcondBox: TGroupBox;
    WorkGrouperBox: TGroupBox;
    WorkdataBox: TGroupBox;
    WorkbtnBox: TGroupBox;
    Work_sel_Btn: TButton;
    work_selGrd: TDBGrid;
    Work_cond_Edit: TLabeledEdit;
    Work_fnd_Edit: TLabeledEdit;
    Work_naim_Radio: TRadioButton;
    Work_reset_Radio: TRadioButton;
    Work_data_Box: TGroupBox;
    Work_btn_Box: TGroupBox;
    Work_inp_Box: TGroupBox;
    Work_ins_Btn: TButton;
    Nam_work_inp: TLabeledEdit;
    Work_upd_data_Box: TGroupBox;
    Work_upd_inpBox: TGroupBox;
    Work_upd_btnBox: TGroupBox;
    etap_upd_btn: TButton;
    Work_upd_e_lbl: TStaticText;
    Work_upd_u_dbl: TDBLookupComboBox;
    etap_del_data_Box: TGroupBox;
    etap_del_btn_Box: TGroupBox;
    etap_del_ipp_Box: TGroupBox;
    etap_del_btn: TButton;
    etap_del_grid: TDBGrid;
    etap_del_e_lbl: TStaticText;
    etap_del_e_dbl: TDBLookupComboBox;
    Work_Tdate_Radio: TRadioButton;
    threedaysCB: TCheckBox;
    ins_Work_Grid: TDBGrid;
    Work_t_date_lbl: TStaticText;
    Work_t_days_inp: TDateTimePicker;
    Work_n_etap_lbl: TStaticText;
    Work_n_etap_dbl: TDBLookupComboBox;
    Work_updGrid: TDBGrid;
    Work_upd_u_lbl: TStaticText;
    Work_u_t_days_inp: TDateTimePicker;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure Work_sel_BtnClick(Sender: TObject);
    procedure Work_fnd_EditKeyPress(Sender: TObject; var Key: Char);
    procedure Work_naim_RadioClick(Sender: TObject);
    procedure Work_Tdate_RadioClick(Sender: TObject);
    procedure Work_reset_RadioClick(Sender: TObject);
    procedure threedaysCBClick(Sender: TObject);
    procedure Work_ins_BtnClick(Sender: TObject);
    procedure work_selGrdDrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
    procedure etap_upd_btnClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_work: TFrm_work;
  urgency_st:Integer;
implementation

uses Un_dm, Un_func;

{$R *.dfm}



procedure TFrm_work.etap_upd_btnClick(Sender: TObject);
var
  AreFieldsEmpty: Boolean;
begin
  AreFieldsEmpty:=(
  (Work_upd_u_dbl.Text='')
  );
  if AreFieldsEmpty then
  begin

  end;
end;

procedure TFrm_work.FormActivate(Sender: TObject);
begin
  dm.etapQuery.Open;
  dm.workQuery.Open;
  AdjustDBGridColumnWidths('Frm_work',6000, 10);
end;

procedure TFrm_work.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  SaveFormState(Self);
  CloseAllQueriesOnDataModule('dm');
  urgency_st:=0;
end;

procedure TFrm_work.FormCreate(Sender: TObject);
begin
  UpdateFormShowHint('Frm_work');
  UniformizeButtonsSize(Self,  273, 25);
  UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
  UniformizeComponentAnchors(Self);
  LoadFormState(Self);
  urgency_st:=0;
end;

procedure TFrm_work.threedaysCBClick(Sender: TObject);
var
  cur_date:TDateTime;
begin
  cur_date:=GetCurrentDateTime;
  case threedaysCB.Checked of
  true:
  begin
    try
    if not DM.Connection.Connected then
      raise EDatabaseError.Create('Соединение с базой не установлено',4001);
    with DM.sel_work_by_urgency do
    begin
      Close;
       Parameters.ParamByName('@check_date').Value := cur_date;
      Open;
       DM.workQuery.Recordset:=dm.sel_work_by_urgency.Recordset;
       urgency_st:=1;
    end;
  except
     on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E);
end;
end;
end;
  false:
  begin
     try
   dm.workQuery.SQL.Text:=
    'select'+' '+
    'Work.N_Work,'+' '+
     'Work.Nam_work,'+' '+
     'Work.T_days,'+' '+
     'Etap.Nam_etap'+' '+
     'from Work'+' '+
    'inner join Etap on Etap.N_Etap=Work.N_Etap'+' '+
    'where 1=1';
   dm.workQuery.close;
   dm.workQuery.Open;
  urgency_st:=0;
except
   on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E);
end;
end;
end;
end;//case
end;



procedure TFrm_work.Work_fnd_EditKeyPress(Sender: TObject; var Key: Char);
begin
try
   dm.workQuery.SQL.Text:=
    'select'+' '+
    'Work.N_Work,'+' '+
     'Work.Nam_work,'+' '+
     'Work.T_days,'+' '+
     'Etap.Nam_etap'+' '+
     'from Work'+' '+
    'inner join Etap on Etap.N_Etap=Work.N_Etap'+' '+
    'where 1=1'+' '+
   'and Work.Nam_work like'+
   QuotedStr(Concat(work_fnd_Edit.Text,#37));
   dm.workQuery.close;
   dm.workQuery.Open;
except
   on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E);
end;
end;
end;

procedure TFrm_work.Work_ins_BtnClick(Sender: TObject);
const
  AllowedChars: TSysCharSet = ['А'..'Я', 'а'..'я', '0'..'9', ' ', '-', '.'];
var
  AreFieldsEmpty: Boolean;
  AreFieldsValid: Boolean;
begin
  AreFieldsEmpty:=(
  (Trim(Nam_work_inp.Text)='')or
  (Work_n_etap_dbl.Text='')
  );
  AreFieldsValid:=(
  ValidateComponentText(Nam_work_inp,AllowedChars)
  );
  if AreFieldsEmpty or not AreFieldsValid then
  begin
       MessageDlg('Ошибка: одно из полей пустое или текст не прошел проверку.',
    mtError, [mbOK], 0);
    Beep;
    Exit;
  end;
  try
      with dm.ins_work do
      begin
        if not dm.Connection.Connected then
          raise EDatabaseError.Create('Соединение с базой не установлено',4001);
           Parameters.ParamByName('@Nam_work').Value :=Nam_work_inp.Text;
           Parameters.ParamByName('@T_days').Value :=Work_t_days_inp.Date;
           Parameters.ParamByName('@n_etap').Value :=
           dm.etapQuery.FieldByName('n_etap').AsString;
           ExecProc;
           dm.workQuery.Close;
           dm.workQuery.Open;
        MessageDlg('Изменения внесены', mtInformation, [mbOK], 0);
      end;
    except
      on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка COM: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E); 
end;
end;
end;

procedure TFrm_work.Work_naim_RadioClick(Sender: TObject);
begin
   if  Work_naim_Radio.Checked=true then
  begin
    try
     with dm.workQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
      'select'+' '+
    'Work.N_Work,'+' '+
     'Work.Nam_work,'+' '+
     'Work.T_days,'+' '+
     'Etap.Nam_etap'+' '+
     'from Work'+' '+
    'inner join Etap on Etap.N_Etap=Work.N_Etap'+' '+
    'where 1=1'+' '+
     'order by  Work.Nam_work asc';
      Open;
     end;
    except
        on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E);
  end;
end;
end;
end;

procedure TFrm_work.Work_reset_RadioClick(Sender: TObject);
  var i,j,c:Integer;
begin
  try
  if Work_reset_Radio.Checked then
  begin
    with Frm_work do
    begin
      for I := 0 to ComponentCount - 1 do
      begin
        if Components[I] is TLabeledEdit then
        begin
          (Components[I] as TLabeledEdit).Clear;
        end;
      end;
      for c := 0 to ComponentCount - 1 do
      begin
        if Components[c] is TCheckBox then
        begin
          (Components[c] as TCheckBox).Checked := False;
        end;
      end;
      for j := 0 to ComponentCount - 1 do
      begin
        if Components[j] is TRadioButton then
        begin
          (Components[j] as TRadioButton).Checked := False;
        end;
      end;
    end;
    with dm.workQuery do
    begin
      Close;
      sql.Clear;
      sql.Text :=
       'select'+' '+
    'Work.N_Work,'+' '+
     'Work.Nam_work,'+' '+
     'Work.T_days,'+' '+
     'Etap.Nam_etap'+' '+
     'from Work'+' '+
    'inner join Etap on Etap.N_Etap=Work.N_Etap'+' '+
    'where 1=1';
      Open;
    end;
  end;
except
  on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка COM: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E);
  end;
end;
end;

procedure TFrm_work.work_selGrdDrawColumnCell(Sender: TObject;
  const Rect: TRect; DataCol: Integer; Column: TColumn; State: TGridDrawState);
begin
case urgency_st of
  1:
  begin
   work_selGrd.Canvas.Brush.Color := clGreen;
   work_selGrd.Canvas.Font.Color := clBlack;
   work_selGrd.Canvas.FillRect(Rect);
   if Column.Alignment = taRightJustify then
    work_selGrd.Canvas.TextOut(
      Rect.Right - 2 - work_selGrd.Canvas.TextWidth(Column.Field.Text),
      Rect.Top + 2,
      Column.Field.Text
    )
  else
   work_selGrd.Canvas.TextOut(
      Rect.Left + 2,
      Rect.Top + 2,
      Column.Field.Text
    );
  end;
   0:
   begin
      work_selGrd.Canvas.TextOut(Rect.Left +2,Rect.Top+2,Column.Field.Text);
   end;
end; //case
end;

procedure TFrm_work.Work_sel_BtnClick(Sender: TObject);
begin
  try
    if not DM.Connection.Connected then
      raise EDatabaseError.Create('Соединение с базой не установлено',4001);
    with DM.sel_work_by_naim do
    begin
      Close;
      Parameters.ParamByName('@Nam_work').Value :=Work_cond_Edit.Text;
      Open;
       DM.workQuery.Recordset:=dm.sel_work_by_naim.Recordset;
    end;
  except
  on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных : ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка  Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E);
  end;
end;
end;

procedure TFrm_work.Work_Tdate_RadioClick(Sender: TObject);
begin
   if  Work_Tdate_Radio.Checked=true then
  begin
    try
     with dm.workQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
          'select'+' '+
    'Work.N_Work,'+' '+
     'Work.Nam_work,'+' '+
     'Work.T_days,'+' '+
     'Etap.Nam_etap'+' '+
     'from Work'+' '+
    'inner join Etap on Etap.N_Etap=Work.N_Etap'+' '+
    'where 1=1'+' '+
     'order by Work.T_days asc';
      Open;
     end;
    except
        on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E);
  end;
end;
end;
end;

end.
