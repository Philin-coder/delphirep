unit Un_worker;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs,db,ADODB, Grids, DBGrids, StdCtrls, ComCtrls, ExtCtrls,ActiveX,
  DBCtrls, Mask;

type
  TFrm_worker = class(TForm)
    WorkerPC: TPageControl;
    SelTab: TTabSheet;
    insTab: TTabSheet;
    updTab: TTabSheet;
    delTab: TTabSheet;
    WorkercondBox: TGroupBox;
    WorkerGrouperBox: TGroupBox;
    WorkerdataBox: TGroupBox;
    WorkerbtnBox: TGroupBox;
    Worker_sel_Btn: TButton;
    worker_selGrd: TDBGrid;
    Worker_cond_Edit: TLabeledEdit;
    Worker_fnd_Edit: TLabeledEdit;
    Worker_fio_Radio: TRadioButton;
    Worker_reset_Radio: TRadioButton;
    Worker_data_Box: TGroupBox;
    Worker_btn_Box: TGroupBox;
    Worker_inp_Box: TGroupBox;
    Work_ins_Btn: TButton;
    Work_upd_data_Box: TGroupBox;
    Work_upd_inpBox: TGroupBox;
    Work_upd_btnBox: TGroupBox;
    work_upd_btn: TButton;
    Work_upd_e_lbl: TStaticText;
    Work_upd_u_dbl: TDBLookupComboBox;
    work_del_data_Box: TGroupBox;
    work_del_btn_Box: TGroupBox;
    work_del_ipp_Box: TGroupBox;
    work_del_btn: TButton;
    work_del_e_lbl: TStaticText;
    work_del_e_dbl: TDBLookupComboBox;
    Worker_roler_Radio: TRadioButton;
    freeworekrsCB: TCheckBox;
    Work_upd_u_lbl: TStaticText;
    Work_u_t_days_inp: TDateTimePicker;
    DBGrid2: TDBGrid;
    worker_ins_grd: TDBGrid;
    DBGrid3: TDBGrid;
    about_workerPC: TPageControl;
    abot_worker_Tab_one: TTabSheet;
    abot_worker_Tab_two: TTabSheet;
    ins_worker_fio_inp: TLabeledEdit;
    ins_w_dol_lbl: TStaticText;
    ins_w_dol_dbl: TDBLookupComboBox;
    ins_w_phone_lbl: TStaticText;
    ins_w_phone_inp: TMaskEdit;
    free_busy_lbl: TStaticText;
    free_busy_combo: TComboBox;
    data_pr_lbl: TStaticText;
    data_pr_inp: TDateTimePicker;
    ins_w_role_lbl: TStaticText;
    ins_w_role_dbl: TDBLookupComboBox;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure Worker_sel_BtnClick(Sender: TObject);
    procedure Worker_fnd_EditKeyPress(Sender: TObject; var Key: Char);
    procedure Worker_fio_RadioClick(Sender: TObject);
    procedure Worker_roler_RadioClick(Sender: TObject);
    procedure Worker_reset_RadioClick(Sender: TObject);
    procedure freeworekrsCBClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Frm_worker: TFrm_worker;
  free_st:Integer;
implementation

uses Un_dm, Un_func;

{$R *.dfm}



procedure TFrm_worker.FormActivate(Sender: TObject);
begin
  dm.usverQuery.Open;
  dm.dolQuery.Open;
  dm.workerQuery.Open;
  AdjustDBGridColumnWidths('Frm_worker',6000, 10);
end;

procedure TFrm_worker.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  SaveFormState(Self);
  CloseAllQueriesOnDataModule('dm');
  free_st:=0;
end;

procedure TFrm_worker.FormCreate(Sender: TObject);
begin
  UpdateFormShowHint('Frm_worker');
  UniformizeButtonsSize(Self,  273, 25);
  UniformizeDBGrids(Self, 'Arial', 10, clBlack, clWhite);
  UniformizeComponentSizes(Self, 998, 21, clWhite, 'Arial', 10);
  UniformizeComponentAnchors(Self);
  LoadFormState(Self);
  ins_w_phone_inp.EditMask := '!+7 \(999\) 000-00-00;1;_';
  free_st:=0;
end;

procedure TFrm_worker.freeworekrsCBClick(Sender: TObject);
begin
  case freeworekrsCB.Checked of
  true:
  begin
    try
     with dm.workerQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
      'select'+' '+
        'Rabotnik.N_Rab,'+' '+
         'Rabotnik.Fio,'+' '+
         'Dolshnost.Nam_dol,'+' '+
         'Rabotnik.Iphone,'+' '+
'case when Rabotnik.St_rab= 1 then ''Свободен'' else ''Занят'' end as free,'+' '+
        'Rabotnik.Date_pr,'+' '+
        'usver.usver_role'+' '+
        'from Rabotnik'+' '+
        'inner join Dolshnost on Dolshnost.N_Dol=Rabotnik.N_Dol'+' '+
        'inner join usver on usver.usverId=Rabotnik.usverId'+' '+
        'where 1=1'+' '+
        'and  Rabotnik.St_rab= 1';
      Open;
     end;
    except
        on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая  Ошибка: ' + E.Message);
    HandleException(E);
  end;
end;
  end;
  false:
  begin
      try
     with dm.workerQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
      'select'+' '+
        'Rabotnik.N_Rab,'+' '+
         'Rabotnik.Fio,'+' '+
         'Dolshnost.Nam_dol,'+' '+
         'Rabotnik.Iphone,'+' '+
'case when Rabotnik.St_rab= 1 then ''Свободен'' else ''Занят'' end as free,'+' '+
        'Rabotnik.Date_pr,'+' '+
        'usver.usver_role'+' '+
        'from Rabotnik'+' '+
        'inner join Dolshnost on Dolshnost.N_Dol=Rabotnik.N_Dol'+' '+
        'inner join usver on usver.usverId=Rabotnik.usverId'+' '+
        'where 1=1';
      Open;
     end;
    except
        on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая  Ошибка: ' + E.Message);
    HandleException(E);
  end;
end;
  end;
  end;//case
end;

procedure TFrm_worker.Worker_fio_RadioClick(Sender: TObject);
begin
  if  Worker_fio_Radio.Checked=true then
  begin
    try
     with dm.workerQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
      'select'+' '+
        'Rabotnik.N_Rab,'+' '+
         'Rabotnik.Fio,'+' '+
         'Dolshnost.Nam_dol,'+' '+
         'Rabotnik.Iphone,'+' '+
'case when Rabotnik.St_rab= 1 then ''Свободен'' else ''Занят'' end as free,'+' '+
        'Rabotnik.Date_pr,'+' '+
        'usver.usver_role'+' '+
        'from Rabotnik'+' '+
        'inner join Dolshnost on Dolshnost.N_Dol=Rabotnik.N_Dol'+' '+
        'inner join usver on usver.usverId=Rabotnik.usverId'+' '+
        'where 1=1'+' '+
     'order by  Rabotnik.Fio asc';
      Open;
     end;
    except
        on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая  Ошибка: ' + E.Message);
    HandleException(E);
  end;
end;
end;
end;

procedure TFrm_worker.Worker_fnd_EditKeyPress(Sender: TObject; var Key: Char);
begin
  try
   dm.workerQuery.SQL.Text:=
       'select'+' '+
        'Rabotnik.N_Rab,'+' '+
         'Rabotnik.Fio,'+' '+
         'Dolshnost.Nam_dol,'+' '+
         'Rabotnik.Iphone,'+' '+
'case when Rabotnik.St_rab= 1 then ''Свободен'' else ''Занят'' end as free,'+' '+
        'Rabotnik.Date_pr,'+' '+
        'usver.usver_role'+' '+
        'from Rabotnik'+' '+
        'inner join Dolshnost on Dolshnost.N_Dol=Rabotnik.N_Dol'+' '+
        'inner join usver on usver.usverId=Rabotnik.usverId'+' '+
        'where 1=1'+' '+
   'and Dolshnost.Nam_dol like'+
   QuotedStr(Concat(worker_fnd_Edit.Text,#37));
   dm.workerQuery.close;
   dm.workerQuery.Open;
except
   on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E);
end;
end;
end;

procedure TFrm_worker.Worker_reset_RadioClick(Sender: TObject);
var i,j,c:Integer;
begin
   try
  if Worker_reset_Radio.Checked then
  begin
    with Frm_worker do
    begin
      for I := 0 to ComponentCount - 1 do
      begin
        if Components[I] is TLabeledEdit then
        begin
          (Components[I] as TLabeledEdit).Clear;
        end;
      end;
      for c := 0 to ComponentCount - 1 do
      begin
        if Components[c] is TCheckBox then
        begin
          (Components[c] as TCheckBox).Checked := False;
        end;
      end;
      for j := 0 to ComponentCount - 1 do
      begin
        if Components[j] is TRadioButton then
        begin
          (Components[j] as TRadioButton).Checked := False;
        end;
      end;
    end;
    with dm.workerQuery do
    begin
      Close;
      sql.Clear;
      sql.Text :=
        'select'+' '+
        'Rabotnik.N_Rab,'+' '+
         'Rabotnik.Fio,'+' '+
         'Dolshnost.Nam_dol,'+' '+
         'Rabotnik.Iphone,'+' '+
'case when Rabotnik.St_rab= 1 then ''Свободен'' else ''Занят'' end as free,'+' '+
        'Rabotnik.Date_pr,'+' '+
        'usver.usver_role'+' '+
        'from Rabotnik'+' '+
        'inner join Dolshnost on Dolshnost.N_Dol=Rabotnik.N_Dol'+' '+
        'inner join usver on usver.usverId=Rabotnik.usverId'+' '+
        'where 1=1';
      Open;
    end;
  end;
except
  on E: EDatabaseError do
  begin
    ShowMessage('Ошибка  базы  данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка COM: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E);
  end;
end;
end;

procedure TFrm_worker.Worker_roler_RadioClick(Sender: TObject);
begin
  if  Worker_roler_Radio.Checked=true then
  begin
    try
     with dm.workerQuery do
     begin
      close;
      sql.Clear;
      sql.Text:=
       'select'+' '+
        'Rabotnik.N_Rab,'+' '+
         'Rabotnik.Fio,'+' '+
         'Dolshnost.Nam_dol,'+' '+
         'Rabotnik.Iphone,'+' '+
'case when Rabotnik.St_rab= 1 then ''Свободен'' else ''Занят'' end as free,'+' '+
        'Rabotnik.Date_pr,'+' '+
        'usver.usver_role'+' '+
        'from Rabotnik'+' '+
        'inner join Dolshnost on Dolshnost.N_Dol=Rabotnik.N_Dol'+' '+
        'inner join usver on usver.usverId=Rabotnik.usverId'+' '+
        'where 1=1'+' '+
     'order by  Dolshnost.Nam_dol asc';
      Open;
     end;
    except
        on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка  Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E);
  end;
end;
end;
end;

procedure TFrm_worker.Worker_sel_BtnClick(Sender: TObject);
begin
    try
    if not DM.Connection.Connected then
      raise EDatabaseError.Create('Соединение с базой не установлено',4001);
    with DM.sel_worker_by_fio do
    begin
      Close;
      Parameters.ParamByName('@Fio').Value :=Worker_cond_Edit.Text;
      Open;
       DM.workerQuery.Recordset:=dm.sel_worker_by_fio.Recordset;
    end;
  except
  on E: EDatabaseError do
  begin
    ShowMessage('Ошибка базы данных : ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: EOleError do
  begin
    ShowMessage('Ошибка   Ole: ' + E.Message);
    HandleException(E);
    raise;
  end;
  on E: Exception do
  begin
    ShowMessage('Общая ошибка: ' + E.Message);
    HandleException(E);
  end;
end;
end;

end.
